{"version":3,"file":"static/js/890.476aec11.chunk.js","mappings":"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","sources":["../node_modules/src/geometries/DecalGeometry.js","../node_modules/@react-three/drei/core/Decal.js","../node_modules/react-merge-refs/src/index.tsx","../node_modules/@react-three/drei/core/OrthographicCamera.js","../node_modules/@react-three/drei/core/Hud.js","../node_modules/@react-three/drei/core/GizmoHelper.js","../node_modules/@react-three/drei/core/GizmoViewport.js","../node_modules/@react-three/drei/core/useTexture.js","../node_modules/@react-three/drei/web/Html.js","../node_modules/src/lines/LineSegmentsGeometry.js","../node_modules/src/lines/LineMaterial.js","../node_modules/src/lines/LineSegments2.js","../node_modules/src/lines/LineGeometry.js","../node_modules/src/lines/Line2.js","../node_modules/@react-three/drei/core/Line.js","../node_modules/@react-three/drei/web/pivotControls/context.js","../node_modules/@react-three/drei/web/pivotControls/AxisArrow.js","../node_modules/@react-three/drei/web/pivotControls/AxisRotator.js","../node_modules/@react-three/drei/web/pivotControls/PlaneSlider.js","../node_modules/@react-three/drei/core/calculateScaleFactor.js","../node_modules/@react-three/drei/web/pivotControls/index.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute, Matrix4, Vector3 } from 'three'\n\n/**\n * You can use this geometry to create a decal mesh, that serves different kinds of purposes.\n * e.g. adding unique details to models, performing dynamic visual environmental changes or covering seams.\n *\n * Constructor parameter:\n *\n * mesh — Any mesh object\n * position — Position of the decal projector\n * orientation — Orientation of the decal projector\n * size — Size of the decal projector\n *\n * reference: http://blog.wolfire.com/2009/06/how-to-project-decals/\n *\n */\n\nclass DecalGeometry extends BufferGeometry {\n  constructor(mesh, position, orientation, size) {\n    super()\n\n    // buffers\n\n    const vertices = []\n    const normals = []\n    const uvs = []\n\n    // helpers\n\n    const plane = new Vector3()\n\n    // this matrix represents the transformation of the decal projector\n\n    const projectorMatrix = new Matrix4()\n    projectorMatrix.makeRotationFromEuler(orientation)\n    projectorMatrix.setPosition(position)\n\n    const projectorMatrixInverse = new Matrix4()\n    projectorMatrixInverse.copy(projectorMatrix).invert()\n\n    // generate buffers\n\n    generate()\n\n    // build geometry\n\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3))\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3))\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2))\n\n    function generate() {\n      let i\n\n      let decalVertices = []\n\n      const vertex = new Vector3()\n      const normal = new Vector3()\n\n      // handle different geometry types\n\n      if (mesh.geometry.isGeometry === true) {\n        console.error('THREE.DecalGeometry no longer supports THREE.Geometry. Use BufferGeometry instead.')\n        return\n      }\n\n      const geometry = mesh.geometry\n\n      const positionAttribute = geometry.attributes.position\n      const normalAttribute = geometry.attributes.normal\n\n      // first, create an array of 'DecalVertex' objects\n      // three consecutive 'DecalVertex' objects represent a single face\n      //\n      // this data structure will be later used to perform the clipping\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n\n        const index = geometry.index\n\n        for (i = 0; i < index.count; i++) {\n          vertex.fromBufferAttribute(positionAttribute, index.getX(i))\n          normal.fromBufferAttribute(normalAttribute, index.getX(i))\n\n          pushDecalVertex(decalVertices, vertex, normal)\n        }\n      } else {\n        // non-indexed BufferGeometry\n\n        for (i = 0; i < positionAttribute.count; i++) {\n          vertex.fromBufferAttribute(positionAttribute, i)\n          normal.fromBufferAttribute(normalAttribute, i)\n\n          pushDecalVertex(decalVertices, vertex, normal)\n        }\n      }\n\n      // second, clip the geometry so that it doesn't extend out from the projector\n\n      decalVertices = clipGeometry(decalVertices, plane.set(1, 0, 0))\n      decalVertices = clipGeometry(decalVertices, plane.set(-1, 0, 0))\n      decalVertices = clipGeometry(decalVertices, plane.set(0, 1, 0))\n      decalVertices = clipGeometry(decalVertices, plane.set(0, -1, 0))\n      decalVertices = clipGeometry(decalVertices, plane.set(0, 0, 1))\n      decalVertices = clipGeometry(decalVertices, plane.set(0, 0, -1))\n\n      // third, generate final vertices, normals and uvs\n\n      for (i = 0; i < decalVertices.length; i++) {\n        const decalVertex = decalVertices[i]\n\n        // create texture coordinates (we are still in projector space)\n\n        uvs.push(0.5 + decalVertex.position.x / size.x, 0.5 + decalVertex.position.y / size.y)\n\n        // transform the vertex back to world space\n\n        decalVertex.position.applyMatrix4(projectorMatrix)\n\n        // now create vertex and normal buffer data\n\n        vertices.push(decalVertex.position.x, decalVertex.position.y, decalVertex.position.z)\n        normals.push(decalVertex.normal.x, decalVertex.normal.y, decalVertex.normal.z)\n      }\n    }\n\n    function pushDecalVertex(decalVertices, vertex, normal) {\n      // transform the vertex to world space, then to projector space\n\n      vertex.applyMatrix4(mesh.matrixWorld)\n      vertex.applyMatrix4(projectorMatrixInverse)\n\n      normal.transformDirection(mesh.matrixWorld)\n\n      decalVertices.push(new DecalVertex(vertex.clone(), normal.clone()))\n    }\n\n    function clipGeometry(inVertices, plane) {\n      const outVertices = []\n\n      const s = 0.5 * Math.abs(size.dot(plane))\n\n      // a single iteration clips one face,\n      // which consists of three consecutive 'DecalVertex' objects\n\n      for (let i = 0; i < inVertices.length; i += 3) {\n        let v1Out,\n          v2Out,\n          v3Out,\n          total = 0\n        let nV1, nV2, nV3, nV4\n\n        const d1 = inVertices[i + 0].position.dot(plane) - s\n        const d2 = inVertices[i + 1].position.dot(plane) - s\n        const d3 = inVertices[i + 2].position.dot(plane) - s\n\n        v1Out = d1 > 0\n        v2Out = d2 > 0\n        v3Out = d3 > 0\n\n        // calculate, how many vertices of the face lie outside of the clipping plane\n\n        total = (v1Out ? 1 : 0) + (v2Out ? 1 : 0) + (v3Out ? 1 : 0)\n\n        switch (total) {\n          case 0: {\n            // the entire face lies inside of the plane, no clipping needed\n\n            outVertices.push(inVertices[i])\n            outVertices.push(inVertices[i + 1])\n            outVertices.push(inVertices[i + 2])\n            break\n          }\n\n          case 1: {\n            // one vertex lies outside of the plane, perform clipping\n\n            if (v1Out) {\n              nV1 = inVertices[i + 1]\n              nV2 = inVertices[i + 2]\n              nV3 = clip(inVertices[i], nV1, plane, s)\n              nV4 = clip(inVertices[i], nV2, plane, s)\n            }\n\n            if (v2Out) {\n              nV1 = inVertices[i]\n              nV2 = inVertices[i + 2]\n              nV3 = clip(inVertices[i + 1], nV1, plane, s)\n              nV4 = clip(inVertices[i + 1], nV2, plane, s)\n\n              outVertices.push(nV3)\n              outVertices.push(nV2.clone())\n              outVertices.push(nV1.clone())\n\n              outVertices.push(nV2.clone())\n              outVertices.push(nV3.clone())\n              outVertices.push(nV4)\n              break\n            }\n\n            if (v3Out) {\n              nV1 = inVertices[i]\n              nV2 = inVertices[i + 1]\n              nV3 = clip(inVertices[i + 2], nV1, plane, s)\n              nV4 = clip(inVertices[i + 2], nV2, plane, s)\n            }\n\n            outVertices.push(nV1.clone())\n            outVertices.push(nV2.clone())\n            outVertices.push(nV3)\n\n            outVertices.push(nV4)\n            outVertices.push(nV3.clone())\n            outVertices.push(nV2.clone())\n\n            break\n          }\n\n          case 2: {\n            // two vertices lies outside of the plane, perform clipping\n\n            if (!v1Out) {\n              nV1 = inVertices[i].clone()\n              nV2 = clip(nV1, inVertices[i + 1], plane, s)\n              nV3 = clip(nV1, inVertices[i + 2], plane, s)\n              outVertices.push(nV1)\n              outVertices.push(nV2)\n              outVertices.push(nV3)\n            }\n\n            if (!v2Out) {\n              nV1 = inVertices[i + 1].clone()\n              nV2 = clip(nV1, inVertices[i + 2], plane, s)\n              nV3 = clip(nV1, inVertices[i], plane, s)\n              outVertices.push(nV1)\n              outVertices.push(nV2)\n              outVertices.push(nV3)\n            }\n\n            if (!v3Out) {\n              nV1 = inVertices[i + 2].clone()\n              nV2 = clip(nV1, inVertices[i], plane, s)\n              nV3 = clip(nV1, inVertices[i + 1], plane, s)\n              outVertices.push(nV1)\n              outVertices.push(nV2)\n              outVertices.push(nV3)\n            }\n\n            break\n          }\n\n          case 3: {\n            // the entire face lies outside of the plane, so let's discard the corresponding vertices\n\n            break\n          }\n        }\n      }\n\n      return outVertices\n    }\n\n    function clip(v0, v1, p, s) {\n      const d0 = v0.position.dot(p) - s\n      const d1 = v1.position.dot(p) - s\n\n      const s0 = d0 / (d0 - d1)\n\n      const v = new DecalVertex(\n        new Vector3(\n          v0.position.x + s0 * (v1.position.x - v0.position.x),\n          v0.position.y + s0 * (v1.position.y - v0.position.y),\n          v0.position.z + s0 * (v1.position.z - v0.position.z),\n        ),\n        new Vector3(\n          v0.normal.x + s0 * (v1.normal.x - v0.normal.x),\n          v0.normal.y + s0 * (v1.normal.y - v0.normal.y),\n          v0.normal.z + s0 * (v1.normal.z - v0.normal.z),\n        ),\n      )\n\n      // need to clip more values (texture coordinates)? do it this way:\n      // intersectpoint.value = a.value + s * ( b.value - a.value );\n\n      return v\n    }\n  }\n}\n\n// helper\n\nclass DecalVertex {\n  constructor(position, normal) {\n    this.position = position\n    this.normal = normal\n  }\n\n  clone() {\n    return new this.constructor(this.position.clone(), this.normal.clone())\n  }\n}\n\nexport { DecalGeometry, DecalVertex }\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { applyProps } from '@react-three/fiber';\nimport { DecalGeometry } from 'three-stdlib';\n\nfunction isArray(vec) {\n  return Array.isArray(vec);\n}\nfunction vecToArray(vec = [0, 0, 0]) {\n  if (isArray(vec)) {\n    return vec;\n  } else if (vec instanceof THREE.Vector3 || vec instanceof THREE.Euler) {\n    return [vec.x, vec.y, vec.z];\n  } else {\n    return [vec, vec, vec];\n  }\n}\nconst Decal = /* @__PURE__ */React.forwardRef(function Decal({\n  debug,\n  depthTest = false,\n  polygonOffsetFactor = -10,\n  map,\n  mesh,\n  children,\n  position,\n  rotation,\n  scale,\n  ...props\n}, forwardRef) {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current);\n  const helper = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const parent = (mesh == null ? void 0 : mesh.current) || ref.current.parent;\n    const target = ref.current;\n    if (!(parent instanceof THREE.Mesh)) {\n      throw new Error('Decal must have a Mesh as parent or specify its \"mesh\" prop');\n    }\n    const state = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler(),\n      scale: new THREE.Vector3(1, 1, 1)\n    };\n    if (parent) {\n      applyProps(state, {\n        position,\n        scale\n      });\n\n      // Zero out the parents matrix world for this operation\n      const matrixWorld = parent.matrixWorld.clone();\n      parent.matrixWorld.identity();\n      if (!rotation || typeof rotation === 'number') {\n        const o = new THREE.Object3D();\n        o.position.copy(state.position);\n        o.lookAt(parent.position);\n        if (typeof rotation === 'number') o.rotateZ(rotation);\n        applyProps(state, {\n          rotation: o.rotation\n        });\n      } else {\n        applyProps(state, {\n          rotation\n        });\n      }\n      target.geometry = new DecalGeometry(parent, state.position, state.rotation, state.scale);\n      if (helper.current) {\n        applyProps(helper.current, state);\n        // Prevent the helpers from blocking rays\n        helper.current.traverse(child => child.raycast = () => null);\n      }\n      // Reset parents matix-world\n      parent.matrixWorld = matrixWorld;\n      return () => {\n        target.geometry.dispose();\n      };\n    }\n  }, [mesh, ...vecToArray(position), ...vecToArray(scale), ...vecToArray(rotation)]);\n\n  // <meshStandardMaterial transparent polygonOffset polygonOffsetFactor={-10} {...props} />}\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    \"material-transparent\": true,\n    \"material-polygonOffset\": true,\n    \"material-polygonOffsetFactor\": polygonOffsetFactor,\n    \"material-depthTest\": depthTest,\n    \"material-map\": map\n  }, props), children, debug && /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: helper\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", null), /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }), /*#__PURE__*/React.createElement(\"axesHelper\", null)));\n});\n\nexport { Decal };\n","import * as React from \"react\";\n\nexport default function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\nconst OrthographicCamera = /* @__PURE__ */React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  children,\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set]);\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { OrthographicCamera };\n","import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nfunction RenderHud({\n  defaultScene,\n  defaultCamera,\n  renderPriority = 1\n}) {\n  const {\n    gl,\n    scene,\n    camera\n  } = useThree();\n  let oldCLear;\n  useFrame(() => {\n    oldCLear = gl.autoClear;\n    if (renderPriority === 1) {\n      // Clear scene and render the default scene\n      gl.autoClear = true;\n      gl.render(defaultScene, defaultCamera);\n    }\n    // Disable cleaning and render the portal with its own camera\n    gl.autoClear = false;\n    gl.clearDepth();\n    gl.render(scene, camera);\n    // Restore default\n    gl.autoClear = oldCLear;\n  }, renderPriority);\n  // Without an element that receives pointer events state.pointer will always be 0/0\n  return /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  });\n}\nfunction Hud({\n  children,\n  renderPriority = 1\n}) {\n  const {\n    scene: defaultScene,\n    camera: defaultCamera\n  } = useThree();\n  const [hudScene] = React.useState(() => new THREE.Scene());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(RenderHud, {\n    defaultScene: defaultScene,\n    defaultCamera: defaultCamera,\n    renderPriority: renderPriority\n  })), hudScene, {\n    events: {\n      priority: renderPriority + 1\n    }\n  }));\n}\n\nexport { Hud };\n","import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Vector3, Object3D, Matrix4, Quaternion } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { Hud } from './Hud.js';\n\nconst Context = /* @__PURE__ */React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\nconst dummy = /* @__PURE__ */new Object3D();\nconst matrix = /* @__PURE__ */new Matrix4();\nconst [q1, q2] = [/* @__PURE__ */new Quaternion(), /* @__PURE__ */new Quaternion()];\nconst target = /* @__PURE__ */new Vector3();\nconst targetPosition = /* @__PURE__ */new Vector3();\nconst isOrbitControls = controls => {\n  return 'minPolarAngle' in controls;\n};\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 1,\n  onUpdate,\n  onTarget,\n  children\n}) => {\n  const size = useThree(state => state.size);\n  const mainCamera = useThree(state => state.camera);\n  // @ts-ignore\n  const defaultControls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const gizmoRef = React.useRef(null);\n  const virtualCam = React.useRef(null);\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const defaultUp = React.useRef(new Vector3(0, 0, 0));\n  React.useEffect(() => {\n    defaultUp.current.copy(mainCamera.up);\n  }, [mainCamera]);\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target);\n\n    // Rotate from current camera orientation\n    q1.copy(mainCamera.quaternion);\n\n    // To new current camera orientation\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    dummy.up.copy(mainCamera.up);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false;\n          // Orbit controls uses UP vector as the orbit axes,\n          // so we need to reset it after the animation is done\n          // moving it around for the controls to work correctly\n          if (isOrbitControls(defaultControls)) {\n            mainCamera.up.copy(defaultUp.current);\n          }\n        } else {\n          const step = delta * turnRate;\n          // animate position by doing a slerp and then scaling the position on the unit sphere\n          q1.rotateTowards(q2, step);\n          // animate orientation\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      }\n\n      // Sync Gizmo with main camera orientation\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null || _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n    }\n  });\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera\n  }), [tweenCamera]);\n\n  // Position gizmo component within scene\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return /*#__PURE__*/React.createElement(Hud, {\n    renderPriority: renderPriority\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    makeDefault: true,\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, children)));\n};\n\nexport { GizmoHelper, useGizmoContext };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { CanvasTexture } from 'three';\nimport { useGizmoContext } from './GizmoHelper.js';\n\nfunction Axis({\n  scale = [0.8, 0.05, 0.05],\n  color,\n  rotation\n}) {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    rotation: rotation\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0.4, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: scale\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: color,\n    toneMapped: false\n  })));\n}\nfunction AxisHead({\n  onClick,\n  font,\n  disabled,\n  arcStyle,\n  label,\n  labelColor,\n  axisHeadScale = 1,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 64;\n    canvas.height = 64;\n    const context = canvas.getContext('2d');\n    context.beginPath();\n    context.arc(32, 32, 16, 0, 2 * Math.PI);\n    context.closePath();\n    context.fillStyle = arcStyle;\n    context.fill();\n    if (label) {\n      context.font = font;\n      context.textAlign = 'center';\n      context.fillStyle = labelColor;\n      context.fillText(label, 32, 41);\n    }\n    return new CanvasTexture(canvas);\n  }, [arcStyle, label, labelColor, font]);\n  const [active, setActive] = React.useState(false);\n  const scale = (label ? 1 : 0.75) * (active ? 1.2 : 1) * axisHeadScale;\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setActive(true);\n  };\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setActive(false);\n  };\n  return /*#__PURE__*/React.createElement(\"sprite\", _extends({\n    scale: scale,\n    onPointerOver: !disabled ? handlePointerOver : undefined,\n    onPointerOut: !disabled ? onClick || handlePointerOut : undefined\n  }, props), /*#__PURE__*/React.createElement(\"spriteMaterial\", {\n    map: texture,\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\n    alphaTest: 0.3,\n    opacity: label ? 1 : 0.75,\n    toneMapped: false\n  }));\n}\nconst GizmoViewport = ({\n  hideNegativeAxes,\n  hideAxisHeads,\n  disabled,\n  font = '18px Inter var, Arial, sans-serif',\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  axisHeadScale = 1,\n  axisScale,\n  labels = ['X', 'Y', 'Z'],\n  labelColor = '#000',\n  onClick,\n  ...props\n}) => {\n  const [colorX, colorY, colorZ] = axisColors;\n  const {\n    tweenCamera\n  } = useGizmoContext();\n  const axisHeadProps = {\n    font,\n    disabled,\n    labelColor,\n    onClick,\n    axisHeadScale,\n    onPointerDown: !disabled ? e => {\n      tweenCamera(e.object.position);\n      e.stopPropagation();\n    } : undefined\n  };\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    scale: 40\n  }, props), /*#__PURE__*/React.createElement(Axis, {\n    color: colorX,\n    rotation: [0, 0, 0],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorY,\n    rotation: [0, 0, Math.PI / 2],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorZ,\n    rotation: [0, -Math.PI / 2, 0],\n    scale: axisScale\n  }), !hideAxisHeads && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [1, 0, 0],\n    label: labels[0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, 1, 0],\n    label: labels[1]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, 1],\n    label: labels[2]\n  }, axisHeadProps)), !hideNegativeAxes && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [-1, 0, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, -1, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, -1]\n  }, axisHeadProps)))));\n};\n\nexport { GizmoViewport };\n","import { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useLayoutEffect, useEffect } from 'react';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(() => {\n    if ('initTexture' in gl) {\n      const array = Array.isArray(textures) ? textures : [textures];\n      array.forEach(gl.initTexture);\n    }\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    const keyed = {};\n    let i = 0;\n    for (const key in input) keyed[key] = textures[i++];\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, DoubleSide, OrthographicCamera, PerspectiveCamera } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = /* @__PURE__ */new Vector3();\nconst v2 = /* @__PURE__ */new Vector3();\nconst v3 = /* @__PURE__ */new Vector3();\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n  return true;\n}\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n  return undefined;\n}\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n  return prepend + matrix3d;\n}\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\nfunction isRefObject(ref) {\n  return ref && typeof ref === 'object' && 'current' in ref;\n}\nconst Html = /* @__PURE__ */React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  castShadow,\n  receiveShadow,\n  material,\n  geometry,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  const {\n    gl,\n    camera,\n    scene,\n    size,\n    raycaster,\n    events,\n    viewport\n  } = useThree();\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useRef();\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  // Append to the connected element, which makes HTML work with views\n  const target = (portal == null ? void 0 : portal.current) || events.connected || gl.domElement.parentNode;\n  const occlusionMeshRef = React.useRef(null);\n  const isMeshSizeSet = React.useRef(false);\n  const isRayCastOcclusion = React.useMemo(() => {\n    return occlude && occlude !== 'blending' || Array.isArray(occlude) && occlude.length && isRefObject(occlude[0]);\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    const el = gl.domElement;\n    if (occlude && occlude === 'blending') {\n      el.style.zIndex = `${Math.floor(zIndexRange[0] / 2)}`;\n      el.style.position = 'absolute';\n      el.style.pointerEvents = 'none';\n    } else {\n      el.style.zIndex = null;\n      el.style.position = null;\n      el.style.pointerEvents = null;\n    }\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    if (group.current) {\n      const currentRoot = root.current = ReactDOM.createRoot(el);\n      scene.updateMatrixWorld();\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n      return () => {\n        if (target) target.removeChild(el);\n        currentRoot.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    isMeshSizeSet.current = false;\n    if (transform) {\n      var _root$current;\n      (_root$current = root.current) == null || _root$current.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      var _root$current2;\n      (_root$current2 = root.current) == null || _root$current2.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(gl => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n        if (isRayCastOcclusion) {\n          if (Array.isArray(occlude)) {\n            raytraceTarget = occlude.map(item => item.current);\n          } else if (occlude !== 'blending') {\n            raytraceTarget = [scene];\n          }\n        }\n        const previouslyVisible = visible.current;\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n        const halfRange = Math.floor(zIndexRange[0] / 2);\n        const zRange = occlude ? isRayCastOcclusion //\n        ? [zIndexRange[0], halfRange] : [halfRange - 1, 0] : zIndexRange;\n        el.style.zIndex = `${objectZIndex(group.current, camera, zRange)}`;\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n    if (!isRayCastOcclusion && occlusionMeshRef.current && !isMeshSizeSet.current) {\n      if (transform) {\n        if (transformOuterRef.current) {\n          const el = transformOuterRef.current.children[0];\n          if (el != null && el.clientWidth && el != null && el.clientHeight) {\n            const {\n              isOrthographicCamera\n            } = camera;\n            if (isOrthographicCamera || geometry) {\n              if (props.scale) {\n                if (!Array.isArray(props.scale)) {\n                  occlusionMeshRef.current.scale.setScalar(1 / props.scale);\n                } else if (props.scale instanceof Vector3) {\n                  occlusionMeshRef.current.scale.copy(props.scale.clone().divideScalar(1));\n                } else {\n                  occlusionMeshRef.current.scale.set(1 / props.scale[0], 1 / props.scale[1], 1 / props.scale[2]);\n                }\n              }\n            } else {\n              const ratio = (distanceFactor || 10) / 400;\n              const w = el.clientWidth * ratio;\n              const h = el.clientHeight * ratio;\n              occlusionMeshRef.current.scale.set(w, h, 1);\n            }\n            isMeshSizeSet.current = true;\n          }\n        }\n      } else {\n        const ele = el.children[0];\n        if (ele != null && ele.clientWidth && ele != null && ele.clientHeight) {\n          const ratio = 1 / viewport.factor;\n          const w = ele.clientWidth * ratio;\n          const h = ele.clientHeight * ratio;\n          occlusionMeshRef.current.scale.set(w, h, 1);\n          isMeshSizeSet.current = true;\n        }\n        occlusionMeshRef.current.lookAt(gl.camera.position);\n      }\n    }\n  });\n  const shaders = React.useMemo(() => ({\n    vertexShader: !transform ? /* glsl */`\n          /*\n            This shader is from the THREE's SpriteMaterial.\n            We need to turn the backing plane into a Sprite\n            (make it always face the camera) if \"transfrom\" \n            is false. \n          */\n          #include <common>\n\n          void main() {\n            vec2 center = vec2(0., 1.);\n            float rotation = 0.0;\n            \n            // This is somewhat arbitrary, but it seems to work well\n            // Need to figure out how to derive this dynamically if it even matters\n            float size = 0.03;\n\n            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n            vec2 scale;\n            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n            bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n            if ( isPerspective ) scale *= - mvPosition.z;\n\n            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\n            vec2 rotatedPosition;\n            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n            mvPosition.xy += rotatedPosition;\n\n            gl_Position = projectionMatrix * mvPosition;\n          }\n      ` : undefined,\n    fragmentShader: /* glsl */`\n        void main() {\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `\n  }), [transform]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }), occlude && !isRayCastOcclusion && /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: castShadow,\n    receiveShadow: receiveShadow,\n    ref: occlusionMeshRef\n  }, geometry || /*#__PURE__*/React.createElement(\"planeGeometry\", null), material || /*#__PURE__*/React.createElement(\"shaderMaterial\", {\n    side: DoubleSide,\n    vertexShader: shaders.vertexShader,\n    fragmentShader: shaders.fragmentShader\n  })));\n});\n\nexport { Html };\n","import {\n  Box3,\n  Float32BufferAttribute,\n  InstancedBufferGeometry,\n  InstancedInterleavedBuffer,\n  InterleavedBufferAttribute,\n  Sphere,\n  Vector3,\n  WireframeGeometry,\n} from 'three'\n\nconst _box = new Box3()\nconst _vector = new Vector3()\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super()\n\n    this.isLineSegmentsGeometry = true\n\n    this.type = 'LineSegmentsGeometry'\n\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0]\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2]\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5]\n\n    this.setIndex(index)\n    this.setAttribute('position', new Float32BufferAttribute(positions, 3))\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2))\n  }\n\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart\n    const end = this.attributes.instanceEnd\n\n    if (start !== undefined) {\n      start.applyMatrix4(matrix)\n\n      end.applyMatrix4(matrix)\n\n      start.needsUpdate = true\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox()\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere()\n    }\n\n    return this\n  }\n\n  setPositions(array) {\n    let lineSegments\n\n    if (array instanceof Float32Array) {\n      lineSegments = array\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array)\n    }\n\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1) // xyz, xyz\n\n    this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)) // xyz\n    this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)) // xyz\n\n    //\n\n    this.computeBoundingBox()\n    this.computeBoundingSphere()\n\n    return this\n  }\n\n  setColors(array, itemSize = 3) {\n    let colors\n\n    if (array instanceof Float32Array) {\n      colors = array\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array)\n    }\n\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, itemSize * 2, 1) // rgb(a), rgb(a)\n\n    this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, itemSize, 0)) // rgb(a)\n    this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, itemSize, itemSize)) // rgb(a)\n\n    return this\n  }\n\n  fromWireframeGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array)\n\n    return this\n  }\n\n  fromEdgesGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array)\n\n    return this\n  }\n\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry))\n\n    // set colors, maybe\n\n    return this\n  }\n\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry\n\n    this.setPositions(geometry.attributes.position.array) // assumes non-indexed\n\n    // set colors, maybe\n\n    return this\n  }\n\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3()\n    }\n\n    const start = this.attributes.instanceStart\n    const end = this.attributes.instanceEnd\n\n    if (start !== undefined && end !== undefined) {\n      this.boundingBox.setFromBufferAttribute(start)\n\n      _box.setFromBufferAttribute(end)\n\n      this.boundingBox.union(_box)\n    }\n  }\n\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere()\n    }\n\n    if (this.boundingBox === null) {\n      this.computeBoundingBox()\n    }\n\n    const start = this.attributes.instanceStart\n    const end = this.attributes.instanceEnd\n\n    if (start !== undefined && end !== undefined) {\n      const center = this.boundingSphere.center\n\n      this.boundingBox.getCenter(center)\n\n      let maxRadiusSq = 0\n\n      for (let i = 0, il = start.count; i < il; i++) {\n        _vector.fromBufferAttribute(start, i)\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector))\n\n        _vector.fromBufferAttribute(end, i)\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector))\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq)\n\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error(\n          'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.',\n          this,\n        )\n      }\n    }\n  }\n\n  toJSON() {\n    // todo\n  }\n\n  applyMatrix(matrix) {\n    console.warn('THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().')\n\n    return this.applyMatrix4(matrix)\n  }\n}\n\nexport { LineSegmentsGeometry }\n","/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport { ShaderMaterial, UniformsLib, UniformsUtils, Vector2, REVISION } from 'three'\n\nclass LineMaterial extends ShaderMaterial {\n  constructor(parameters) {\n    super({\n      type: 'LineMaterial',\n\n      uniforms: UniformsUtils.clone(\n        UniformsUtils.merge([\n          UniformsLib.common,\n          UniformsLib.fog,\n          {\n            worldUnits: { value: 1 },\n            linewidth: { value: 1 },\n            resolution: { value: new Vector2(1, 1) },\n            dashOffset: { value: 0 },\n            dashScale: { value: 1 },\n            dashSize: { value: 1 },\n            gapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n          },\n        ]),\n      ),\n\n      vertexShader: /* glsl */ `\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>\n\n\t\t\t\tuniform float linewidth;\n\t\t\t\tuniform vec2 resolution;\n\n\t\t\t\tattribute vec3 instanceStart;\n\t\t\t\tattribute vec3 instanceEnd;\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t\tattribute vec4 instanceColorStart;\n\t\t\t\t\t\tattribute vec4 instanceColorEnd;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t\tattribute vec3 instanceColorStart;\n\t\t\t\t\t\tattribute vec3 instanceColorEnd;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashScale;\n\t\t\t\t\tattribute float instanceDistanceStart;\n\t\t\t\t\tattribute float instanceDistanceEnd;\n\t\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#endif\n\n\t\t\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t\t\t// conservative estimate of the near plane\n\t\t\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#ifdef USE_COLOR\n\n\t\t\t\t\t\tvLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t\t\t// camera space\n\t\t\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\tworldStart = start.xyz;\n\t\t\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\t\t\tif ( perspective ) {\n\n\t\t\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// clip space\n\t\t\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t\t\t// ndc space\n\t\t\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t\t\t// direction\n\t\t\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t\t\t// account for clip-space aspect ratio\n\t\t\t\t\tdir.x *= aspect;\n\t\t\t\t\tdir = normalize( dir );\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\t\t\tvec3 offset;\n\t\t\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t\t\t// set the world position\n\t\t\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t\t\t// project the worldpos\n\t\t\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t\t\t// segments overlap neatly\n\t\t\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\t\t\tdir.x /= aspect;\n\t\t\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t\t\t// sign flip\n\t\t\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t\t\t// endcaps\n\t\t\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\t\t\toffset += - dir;\n\n\t\t\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\t\t\toffset += dir;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// adjust for linewidth\n\t\t\t\t\t\toffset *= linewidth;\n\n\t\t\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t\t\t// select end\n\t\t\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t\t\t// back to clip space\n\t\t\t\t\t\toffset *= clip.w;\n\n\t\t\t\t\t\tclip.xy += offset;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tgl_Position = clip;\n\n\t\t\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t\t\t#include <logdepthbuf_vertex>\n\t\t\t\t\t#include <clipping_planes_vertex>\n\t\t\t\t\t#include <fog_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n      fragmentShader: /* glsl */ `\n\t\t\t\tuniform vec3 diffuse;\n\t\t\t\tuniform float opacity;\n\t\t\t\tuniform float linewidth;\n\n\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\tuniform float dashOffset;\n\t\t\t\t\tuniform float dashSize;\n\t\t\t\t\tuniform float gapSize;\n\n\t\t\t\t#endif\n\n\t\t\t\tvarying float vLineDistance;\n\n\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\tvarying vec4 worldPos;\n\t\t\t\t\tvarying vec3 worldStart;\n\t\t\t\t\tvarying vec3 worldEnd;\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#else\n\n\t\t\t\t\tvarying vec2 vUv;\n\n\t\t\t\t#endif\n\n\t\t\t\t#include <common>\n\t\t\t\t#include <fog_pars_fragment>\n\t\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t\t#include <clipping_planes_pars_fragment>\n\n\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\tvarying vec4 vLineColor;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvarying vec3 vLineColor;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\n\t\t\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\t\t\tfloat mua;\n\t\t\t\t\tfloat mub;\n\n\t\t\t\t\tvec3 p13 = p1 - p3;\n\t\t\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\t\t\tmua = numer / denom;\n\t\t\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\t\t\treturn vec2( mua, mub );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t\t\t#ifdef USE_DASH\n\n\t\t\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tfloat alpha = opacity;\n\n\t\t\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\t\t\tfloat len = length( delta );\n\t\t\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t#endif\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#else\n\n\t\t\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t#endif\n\n\t\t\t\t\t#endif\n\n\t\t\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\t\t\t\t\t#ifdef USE_COLOR\n\t\t\t\t\t\t#ifdef USE_LINE_COLOR_ALPHA\n\t\t\t\t\t\t\tdiffuseColor *= vLineColor;\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tdiffuseColor.rgb *= vLineColor;\n\t\t\t\t\t\t#endif\n\t\t\t\t\t#endif\n\n\t\t\t\t\t#include <logdepthbuf_fragment>\n\n\t\t\t\t\tgl_FragColor = diffuseColor;\n\n\t\t\t\t\t#include <tonemapping_fragment>\n\t\t\t\t\t#include <${parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n\t\t\t\t\t#include <fog_fragment>\n\t\t\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t\t\t}\n\t\t\t`,\n      clipping: true, // required for clipping support\n    })\n\n    this.isLineMaterial = true\n\n    this.onBeforeCompile = function () {\n      if (this.transparent) {\n        this.defines.USE_LINE_COLOR_ALPHA = '1'\n      } else {\n        delete this.defines.USE_LINE_COLOR_ALPHA\n      }\n    }\n\n    Object.defineProperties(this, {\n      color: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.diffuse.value\n        },\n\n        set: function (value) {\n          this.uniforms.diffuse.value = value\n        },\n      },\n\n      worldUnits: {\n        enumerable: true,\n\n        get: function () {\n          return 'WORLD_UNITS' in this.defines\n        },\n\n        set: function (value) {\n          if (value === true) {\n            this.defines.WORLD_UNITS = ''\n          } else {\n            delete this.defines.WORLD_UNITS\n          }\n        },\n      },\n\n      linewidth: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.linewidth.value\n        },\n\n        set: function (value) {\n          this.uniforms.linewidth.value = value\n        },\n      },\n\n      dashed: {\n        enumerable: true,\n\n        get: function () {\n          return Boolean('USE_DASH' in this.defines)\n        },\n\n        set(value) {\n          if (Boolean(value) !== Boolean('USE_DASH' in this.defines)) {\n            this.needsUpdate = true\n          }\n\n          if (value === true) {\n            this.defines.USE_DASH = ''\n          } else {\n            delete this.defines.USE_DASH\n          }\n        },\n      },\n\n      dashScale: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.dashScale.value\n        },\n\n        set: function (value) {\n          this.uniforms.dashScale.value = value\n        },\n      },\n\n      dashSize: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.dashSize.value\n        },\n\n        set: function (value) {\n          this.uniforms.dashSize.value = value\n        },\n      },\n\n      dashOffset: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.dashOffset.value\n        },\n\n        set: function (value) {\n          this.uniforms.dashOffset.value = value\n        },\n      },\n\n      gapSize: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.gapSize.value\n        },\n\n        set: function (value) {\n          this.uniforms.gapSize.value = value\n        },\n      },\n\n      opacity: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.opacity.value\n        },\n\n        set: function (value) {\n          this.uniforms.opacity.value = value\n        },\n      },\n\n      resolution: {\n        enumerable: true,\n\n        get: function () {\n          return this.uniforms.resolution.value\n        },\n\n        set: function (value) {\n          this.uniforms.resolution.value.copy(value)\n        },\n      },\n\n      alphaToCoverage: {\n        enumerable: true,\n\n        get: function () {\n          return Boolean('USE_ALPHA_TO_COVERAGE' in this.defines)\n        },\n\n        set: function (value) {\n          if (Boolean(value) !== Boolean('USE_ALPHA_TO_COVERAGE' in this.defines)) {\n            this.needsUpdate = true\n          }\n\n          if (value === true) {\n            this.defines.USE_ALPHA_TO_COVERAGE = ''\n            this.extensions.derivatives = true\n          } else {\n            delete this.defines.USE_ALPHA_TO_COVERAGE\n            this.extensions.derivatives = false\n          }\n        },\n      },\n    })\n\n    this.setValues(parameters)\n  }\n}\n\nexport { LineMaterial }\n","import {\n  Box3,\n  InstancedInterleavedBuffer,\n  InterleavedBufferAttribute,\n  Line3,\n  MathUtils,\n  Matrix4,\n  Mesh,\n  Sphere,\n  Vector3,\n  Vector4,\n} from 'three'\nimport { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry'\nimport { LineMaterial } from '../lines/LineMaterial'\n\nconst _start = new Vector3()\nconst _end = new Vector3()\n\nconst _start4 = new Vector4()\nconst _end4 = new Vector4()\n\nconst _ssOrigin = new Vector4()\nconst _ssOrigin3 = new Vector3()\nconst _mvMatrix = new Matrix4()\nconst _line = new Line3()\nconst _closestPoint = new Vector3()\n\nconst _box = new Box3()\nconst _sphere = new Sphere()\nconst _clipToWorldVector = new Vector4()\n\nlet _ray, _instanceStart, _instanceEnd, _lineWidth\n\n// Returns the margin required to expand by in world space given the distance from the camera,\n// line width, resolution, and camera projection\nfunction getWorldSpaceHalfWidth(camera, distance, resolution) {\n  // transform into clip space, adjust the x and y values by the pixel width offset, then\n  // transform back into world space to get world offset. Note clip space is [-1, 1] so full\n  // width does not need to be halved.\n  _clipToWorldVector.set(0, 0, -distance, 1.0).applyMatrix4(camera.projectionMatrix)\n  _clipToWorldVector.multiplyScalar(1.0 / _clipToWorldVector.w)\n  _clipToWorldVector.x = _lineWidth / resolution.width\n  _clipToWorldVector.y = _lineWidth / resolution.height\n  _clipToWorldVector.applyMatrix4(camera.projectionMatrixInverse)\n  _clipToWorldVector.multiplyScalar(1.0 / _clipToWorldVector.w)\n\n  return Math.abs(Math.max(_clipToWorldVector.x, _clipToWorldVector.y))\n}\n\nfunction raycastWorldUnits(lineSegments, intersects) {\n  for (let i = 0, l = _instanceStart.count; i < l; i++) {\n    _line.start.fromBufferAttribute(_instanceStart, i)\n    _line.end.fromBufferAttribute(_instanceEnd, i)\n\n    const pointOnLine = new Vector3()\n    const point = new Vector3()\n\n    _ray.distanceSqToSegment(_line.start, _line.end, point, pointOnLine)\n    const isInside = point.distanceTo(pointOnLine) < _lineWidth * 0.5\n\n    if (isInside) {\n      intersects.push({\n        point,\n        pointOnLine,\n        distance: _ray.origin.distanceTo(point),\n        object: lineSegments,\n        face: null,\n        faceIndex: i,\n        uv: null,\n        uv2: null,\n      })\n    }\n  }\n}\n\nfunction raycastScreenSpace(lineSegments, camera, intersects) {\n  const projectionMatrix = camera.projectionMatrix\n  const material = lineSegments.material\n  const resolution = material.resolution\n  const matrixWorld = lineSegments.matrixWorld\n\n  const geometry = lineSegments.geometry\n  const instanceStart = geometry.attributes.instanceStart\n  const instanceEnd = geometry.attributes.instanceEnd\n\n  const near = -camera.near\n\n  //\n\n  // pick a point 1 unit out along the ray to avoid the ray origin\n  // sitting at the camera origin which will cause \"w\" to be 0 when\n  // applying the projection matrix.\n  _ray.at(1, _ssOrigin)\n\n  // ndc space [ - 1.0, 1.0 ]\n  _ssOrigin.w = 1\n  _ssOrigin.applyMatrix4(camera.matrixWorldInverse)\n  _ssOrigin.applyMatrix4(projectionMatrix)\n  _ssOrigin.multiplyScalar(1 / _ssOrigin.w)\n\n  // screen space\n  _ssOrigin.x *= resolution.x / 2\n  _ssOrigin.y *= resolution.y / 2\n  _ssOrigin.z = 0\n\n  _ssOrigin3.copy(_ssOrigin)\n\n  _mvMatrix.multiplyMatrices(camera.matrixWorldInverse, matrixWorld)\n\n  for (let i = 0, l = instanceStart.count; i < l; i++) {\n    _start4.fromBufferAttribute(instanceStart, i)\n    _end4.fromBufferAttribute(instanceEnd, i)\n\n    _start4.w = 1\n    _end4.w = 1\n\n    // camera space\n    _start4.applyMatrix4(_mvMatrix)\n    _end4.applyMatrix4(_mvMatrix)\n\n    // skip the segment if it's entirely behind the camera\n    const isBehindCameraNear = _start4.z > near && _end4.z > near\n    if (isBehindCameraNear) {\n      continue\n    }\n\n    // trim the segment if it extends behind camera near\n    if (_start4.z > near) {\n      const deltaDist = _start4.z - _end4.z\n      const t = (_start4.z - near) / deltaDist\n      _start4.lerp(_end4, t)\n    } else if (_end4.z > near) {\n      const deltaDist = _end4.z - _start4.z\n      const t = (_end4.z - near) / deltaDist\n      _end4.lerp(_start4, t)\n    }\n\n    // clip space\n    _start4.applyMatrix4(projectionMatrix)\n    _end4.applyMatrix4(projectionMatrix)\n\n    // ndc space [ - 1.0, 1.0 ]\n    _start4.multiplyScalar(1 / _start4.w)\n    _end4.multiplyScalar(1 / _end4.w)\n\n    // screen space\n    _start4.x *= resolution.x / 2\n    _start4.y *= resolution.y / 2\n\n    _end4.x *= resolution.x / 2\n    _end4.y *= resolution.y / 2\n\n    // create 2d segment\n    _line.start.copy(_start4)\n    _line.start.z = 0\n\n    _line.end.copy(_end4)\n    _line.end.z = 0\n\n    // get closest point on ray to segment\n    const param = _line.closestPointToPointParameter(_ssOrigin3, true)\n    _line.at(param, _closestPoint)\n\n    // check if the intersection point is within clip space\n    const zPos = MathUtils.lerp(_start4.z, _end4.z, param)\n    const isInClipSpace = zPos >= -1 && zPos <= 1\n\n    const isInside = _ssOrigin3.distanceTo(_closestPoint) < _lineWidth * 0.5\n\n    if (isInClipSpace && isInside) {\n      _line.start.fromBufferAttribute(instanceStart, i)\n      _line.end.fromBufferAttribute(instanceEnd, i)\n\n      _line.start.applyMatrix4(matrixWorld)\n      _line.end.applyMatrix4(matrixWorld)\n\n      const pointOnLine = new Vector3()\n      const point = new Vector3()\n\n      _ray.distanceSqToSegment(_line.start, _line.end, point, pointOnLine)\n\n      intersects.push({\n        point: point,\n        pointOnLine: pointOnLine,\n        distance: _ray.origin.distanceTo(point),\n        object: lineSegments,\n        face: null,\n        faceIndex: i,\n        uv: null,\n        uv2: null,\n      })\n    }\n  }\n}\n\nclass LineSegments2 extends Mesh {\n  constructor(geometry = new LineSegmentsGeometry(), material = new LineMaterial({ color: Math.random() * 0xffffff })) {\n    super(geometry, material)\n\n    this.isLineSegments2 = true\n\n    this.type = 'LineSegments2'\n  }\n\n  // for backwards-compatibility, but could be a method of LineSegmentsGeometry...\n\n  computeLineDistances() {\n    const geometry = this.geometry\n\n    const instanceStart = geometry.attributes.instanceStart\n    const instanceEnd = geometry.attributes.instanceEnd\n    const lineDistances = new Float32Array(2 * instanceStart.count)\n\n    for (let i = 0, j = 0, l = instanceStart.count; i < l; i++, j += 2) {\n      _start.fromBufferAttribute(instanceStart, i)\n      _end.fromBufferAttribute(instanceEnd, i)\n\n      lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1]\n      lineDistances[j + 1] = lineDistances[j] + _start.distanceTo(_end)\n    }\n\n    const instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1) // d0, d1\n\n    geometry.setAttribute('instanceDistanceStart', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)) // d0\n    geometry.setAttribute('instanceDistanceEnd', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)) // d1\n\n    return this\n  }\n\n  raycast(raycaster, intersects) {\n    const worldUnits = this.material.worldUnits\n    const camera = raycaster.camera\n\n    if (camera === null && !worldUnits) {\n      console.error(\n        'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.',\n      )\n    }\n\n    const threshold = raycaster.params.Line2 !== undefined ? raycaster.params.Line2.threshold || 0 : 0\n\n    _ray = raycaster.ray\n\n    const matrixWorld = this.matrixWorld\n    const geometry = this.geometry\n    const material = this.material\n\n    _lineWidth = material.linewidth + threshold\n\n    _instanceStart = geometry.attributes.instanceStart\n    _instanceEnd = geometry.attributes.instanceEnd\n\n    // check if we intersect the sphere bounds\n    if (geometry.boundingSphere === null) {\n      geometry.computeBoundingSphere()\n    }\n\n    _sphere.copy(geometry.boundingSphere).applyMatrix4(matrixWorld)\n\n    // increase the sphere bounds by the worst case line screen space width\n    let sphereMargin\n    if (worldUnits) {\n      sphereMargin = _lineWidth * 0.5\n    } else {\n      const distanceToSphere = Math.max(camera.near, _sphere.distanceToPoint(_ray.origin))\n      sphereMargin = getWorldSpaceHalfWidth(camera, distanceToSphere, material.resolution)\n    }\n\n    _sphere.radius += sphereMargin\n\n    if (_ray.intersectsSphere(_sphere) === false) {\n      return\n    }\n\n    // check if we intersect the box bounds\n    if (geometry.boundingBox === null) {\n      geometry.computeBoundingBox()\n    }\n\n    _box.copy(geometry.boundingBox).applyMatrix4(matrixWorld)\n\n    // increase the box bounds by the worst case line width\n    let boxMargin\n    if (worldUnits) {\n      boxMargin = _lineWidth * 0.5\n    } else {\n      const distanceToBox = Math.max(camera.near, _box.distanceToPoint(_ray.origin))\n      boxMargin = getWorldSpaceHalfWidth(camera, distanceToBox, material.resolution)\n    }\n\n    _box.expandByScalar(boxMargin)\n\n    if (_ray.intersectsBox(_box) === false) {\n      return\n    }\n\n    if (worldUnits) {\n      raycastWorldUnits(this, intersects)\n    } else {\n      raycastScreenSpace(this, camera, intersects)\n    }\n  }\n}\n\nexport { LineSegments2 }\n","import { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry'\n\nclass LineGeometry extends LineSegmentsGeometry {\n  constructor() {\n    super()\n\n    this.isLineGeometry = true\n\n    this.type = 'LineGeometry'\n  }\n\n  setPositions(array) {\n    // converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n    const length = array.length - 3\n    const points = new Float32Array(2 * length)\n\n    for (let i = 0; i < length; i += 3) {\n      points[2 * i] = array[i]\n      points[2 * i + 1] = array[i + 1]\n      points[2 * i + 2] = array[i + 2]\n\n      points[2 * i + 3] = array[i + 3]\n      points[2 * i + 4] = array[i + 4]\n      points[2 * i + 5] = array[i + 5]\n    }\n\n    super.setPositions(points)\n\n    return this\n  }\n\n  setColors(array, itemSize = 3) {\n    // converts [ r1, g1, b1, (a1),  r2, g2, b2, (a2), ... ] to pairs format\n\n    const length = array.length - itemSize\n    const colors = new Float32Array(2 * length)\n\n    if (itemSize === 3) {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i]\n        colors[2 * i + 1] = array[i + 1]\n        colors[2 * i + 2] = array[i + 2]\n\n        colors[2 * i + 3] = array[i + 3]\n        colors[2 * i + 4] = array[i + 4]\n        colors[2 * i + 5] = array[i + 5]\n      }\n    } else {\n      for (let i = 0; i < length; i += itemSize) {\n        colors[2 * i] = array[i]\n        colors[2 * i + 1] = array[i + 1]\n        colors[2 * i + 2] = array[i + 2]\n        colors[2 * i + 3] = array[i + 3]\n\n        colors[2 * i + 4] = array[i + 4]\n        colors[2 * i + 5] = array[i + 5]\n        colors[2 * i + 6] = array[i + 6]\n        colors[2 * i + 7] = array[i + 7]\n      }\n    }\n\n    super.setColors(colors, itemSize)\n\n    return this\n  }\n\n  fromLine(line) {\n    const geometry = line.geometry\n\n    this.setPositions(geometry.attributes.position.array) // assumes non-indexed\n\n    // set colors, maybe\n\n    return this\n  }\n}\n\nexport { LineGeometry }\n","import { LineSegments2 } from '../lines/LineSegments2'\nimport { LineGeometry } from '../lines/LineGeometry'\nimport { LineMaterial } from '../lines/LineMaterial'\n\nclass Line2 extends LineSegments2 {\n  constructor(geometry = new LineGeometry(), material = new LineMaterial({ color: Math.random() * 0xffffff })) {\n    super(geometry, material)\n\n    this.isLine2 = true\n\n    this.type = 'Line2'\n  }\n}\n\nexport { Line2 }\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, Vector4, Vector2, Color } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { LineSegments2, Line2, LineMaterial, LineSegmentsGeometry, LineGeometry } from 'three-stdlib';\n\nconst Line = /* @__PURE__ */React.forwardRef(function Line({\n  points,\n  color = 0xffffff,\n  vertexColors,\n  linewidth,\n  lineWidth,\n  segments,\n  dashed,\n  ...rest\n}, ref) {\n  var _vertexColors$;\n  const size = useThree(state => state.size);\n  const line2 = React.useMemo(() => segments ? new LineSegments2() : new Line2(), [segments]);\n  const [lineMaterial] = React.useState(() => new LineMaterial());\n  const itemSize = (vertexColors == null || (_vertexColors$ = vertexColors[0]) == null ? void 0 : _vertexColors$.length) === 4 ? 4 : 3;\n  const lineGeom = React.useMemo(() => {\n    const geom = segments ? new LineSegmentsGeometry() : new LineGeometry();\n    const pValues = points.map(p => {\n      const isArray = Array.isArray(p);\n      return p instanceof Vector3 || p instanceof Vector4 ? [p.x, p.y, p.z] : p instanceof Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n    });\n    geom.setPositions(pValues.flat());\n    if (vertexColors) {\n      // using vertexColors requires the color value to be white see #1813\n      color = 0xffffff;\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat(), itemSize);\n    }\n    return geom;\n  }, [points, segments, vertexColors, itemSize]);\n  React.useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  React.useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  React.useEffect(() => {\n    return () => lineGeom.dispose();\n  }, [lineGeom]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: [size.width, size.height],\n    linewidth: linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth,\n    dashed: dashed,\n    transparent: itemSize === 4\n  }, rest)));\n});\n\nexport { Line };\n","import * as React from 'react';\n\nconst context = /* @__PURE__ */React.createContext(null);\n\nexport { context };\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst AxisArrow = ({\n  direction,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offset0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    clickInfo.current = {\n      clickPoint,\n      dir\n    };\n    offset0.current = translation.current[axis];\n    onDragStart({\n      component: 'Arrow',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, direction, camControls, onDragStart, translation, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir\n      } = clickInfo.current;\n      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [undefined, undefined];\n      let offset = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      if (min !== undefined) {\n        offset = Math.max(offset, min - offset0.current);\n      }\n      if (max !== undefined) {\n        offset = Math.min(offset, max - offset0.current);\n      }\n      translation.current[axis] = offset0.current + offset;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    cylinderLength,\n    coneWidth,\n    coneLength,\n    matrixL\n  } = React.useMemo(() => {\n    const coneWidth = fixed ? lineWidth / scale * 1.6 : scale / 20;\n    const coneLength = fixed ? 0.2 : scale / 5;\n    const cylinderLength = fixed ? 1 - coneLength : scale - coneLength;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      cylinderLength,\n      coneWidth,\n      coneLength,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color_ = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, -coneLength, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: false,\n    position: [0, (cylinderLength + coneLength) / 2.0, 0],\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]\n  })), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: [0, 0, 0, 0, cylinderLength, 0],\n    lineWidth: lineWidth,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    renderOrder: 1,\n    polygonOffsetFactor: -10,\n    fog: false\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: () => null,\n    position: [0, cylinderLength + coneLength / 2.0, 0],\n    renderOrder: 500\n  }, /*#__PURE__*/React.createElement(\"coneGeometry\", {\n    args: [coneWidth, coneLength, 24, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }))));\n};\n\nexport { AxisArrow, calculateOffset };\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst clickDir = /* @__PURE__ */new THREE.Vector3();\nconst intersectionDir = /* @__PURE__ */new THREE.Vector3();\nconst toDegrees = radians => radians * 180 / Math.PI;\nconst toRadians = degrees => degrees * Math.PI / 180;\nconst calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  const dote1e1 = e1.dot(e1);\n  const dote2e2 = e2.dot(e2);\n  const uClick = clickDir.dot(e1) / dote1e1;\n  const vClick = clickDir.dot(e2) / dote2e2;\n  const uIntersection = intersectionDir.dot(e1) / dote1e1;\n  const vIntersection = intersectionDir.dot(e2) / dote2e2;\n  const angleClick = Math.atan2(vClick, uClick);\n  const angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\nconst fmod = (num, denom) => {\n  let k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\nconst minimizeAngle = angle => {\n  let result = fmod(angle, 2 * Math.PI);\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n  return result;\n};\nconst rotMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst posNew = /* @__PURE__ */new THREE.Vector3();\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst AxisRotator = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    rotationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const angle0 = React.useRef(0);\n  const angle = React.useRef(0);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      origin,\n      e1,\n      e2,\n      normal,\n      plane\n    };\n    onDragStart({\n      component: 'Rotator',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        origin,\n        e1,\n        e2,\n        normal,\n        plane\n      } = clickInfo.current;\n      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      let deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      let degrees = toDegrees(deltaAngle);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n      if (min !== undefined && max !== undefined && max - min < 2 * Math.PI) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = THREE.MathUtils.clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n      } else {\n        angle.current = minimizeAngle(angle0.current + deltaAngle);\n        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;\n      }\n      if (annotations) {\n        degrees = toDegrees(angle.current);\n        divRef.current.innerText = `${degrees.toFixed(0)}º`;\n      }\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [annotations, onDrag, isHovered, rotationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const r = fixed ? 0.65 : scale * 0.65;\n  const arc = React.useMemo(() => {\n    const segments = 32;\n    const points = [];\n    for (let j = 0; j <= segments; j++) {\n      const angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(angle) * r, Math.sin(angle) * r, 0));\n    }\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }));\n};\n\nexport { AxisRotator };\n","import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst decomposeIntoBasis = (e1, e2, offset) => {\n  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;\n  const e2DegrowthOrder = [0, 1, 2].sort((a, b) => Math.abs(e2.getComponent(b)) - Math.abs(e2.getComponent(a)));\n  const i2 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];\n  const a1 = e1.getComponent(i1);\n  const a2 = e1.getComponent(i2);\n  const b1 = e2.getComponent(i1);\n  const b2 = e2.getComponent(i2);\n  const c1 = offset.getComponent(i1);\n  const c2 = offset.getComponent(i2);\n  const y = (c2 - c1 * (a2 / a1)) / (b2 - b1 * (a2 / a1));\n  const x = (c1 - y * b1) / a1;\n  return [x, y];\n};\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offsetX0 = React.useRef(0);\n  const offsetY0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      e1,\n      e2,\n      plane\n    };\n    offsetX0.current = translation.current[(axis + 1) % 3];\n    offsetY0.current = translation.current[(axis + 2) % 3];\n    onDragStart({\n      component: 'Slider',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        e1,\n        e2,\n        plane\n      } = clickInfo.current;\n      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [undefined, undefined];\n      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      let [offsetX, offsetY] = decomposeIntoBasis(e1, e2, intersection);\n      /* let offsetY = (intersection.y - (intersection.x * e1.y) / e1.x) / (e2.y - (e2.x * e1.y) / e1.x)\n      let offsetX = (intersection.x - offsetY * e2.x) / e1.x */\n      if (minX !== undefined) {\n        offsetX = Math.max(offsetX, minX - offsetX0.current);\n      }\n      if (maxX !== undefined) {\n        offsetX = Math.min(offsetX, maxX - offsetX0.current);\n      }\n      if (minY !== undefined) {\n        offsetY = Math.max(offsetY, minY - offsetY0.current);\n      }\n      if (maxY !== undefined) {\n        offsetY = Math.min(offsetY, maxY - offsetY0.current);\n      }\n      translation.current[(axis + 1) % 3] = offsetX0.current + offsetX;\n      translation.current[(axis + 2) % 3] = offsetY0.current + offsetY;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(offsetX * e1.x + offsetY * e2.x, offsetX * e1.y + offsetY * e2.y, offsetX * e1.z + offsetY * e2.z);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide,\n    fog: false\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData,\n    fog: false\n  })));\n};\n\nexport { PlaneSlider };\n","import * as THREE from 'three';\n\nconst tV0 = /* @__PURE__ */new THREE.Vector3();\nconst tV1 = /* @__PURE__ */new THREE.Vector3();\nconst tV2 = /* @__PURE__ */new THREE.Vector3();\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n  return scale;\n};\n\nexport { calculateScaleFactor };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { AxisArrow } from './AxisArrow.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst mL0 = /* @__PURE__ */new THREE.Matrix4();\nconst mW0 = /* @__PURE__ */new THREE.Matrix4();\nconst mP = /* @__PURE__ */new THREE.Matrix4();\nconst mPInv = /* @__PURE__ */new THREE.Matrix4();\nconst mW = /* @__PURE__ */new THREE.Matrix4();\nconst mL = /* @__PURE__ */new THREE.Matrix4();\nconst mL0Inv = /* @__PURE__ */new THREE.Matrix4();\nconst mdL = /* @__PURE__ */new THREE.Matrix4();\nconst bb = /* @__PURE__ */new THREE.Box3();\nconst bbObj = /* @__PURE__ */new THREE.Box3();\nconst vCenter = /* @__PURE__ */new THREE.Vector3();\nconst vSize = /* @__PURE__ */new THREE.Vector3();\nconst vAnchorOffset = /* @__PURE__ */new THREE.Vector3();\nconst vPosition = /* @__PURE__ */new THREE.Vector3();\nconst xDir = /* @__PURE__ */new THREE.Vector3(1, 0, 0);\nconst yDir = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst zDir = /* @__PURE__ */new THREE.Vector3(0, 0, 1);\nconst PivotControls = /* @__PURE__ */React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  annotations = false,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children,\n  ...props\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert();\n      // After applying the delta\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData,\n    annotations,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform, annotations, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    // If the matrix is a real matrix4 it means that the user wants to control the gizmo\n    // In that case it should just be set, as a bare prop update would merely copy it\n    if (matrix && matrix instanceof THREE.Matrix4) ref.current.matrix = matrix;\n  }, [matrix]);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls };\n"],"names":["DecalGeometry","BufferGeometry","constructor","mesh","position","orientation","size","super","vertices","normals","uvs","plane","Vector3","projectorMatrix","Matrix4","makeRotationFromEuler","setPosition","projectorMatrixInverse","pushDecalVertex","decalVertices","vertex","normal","applyMatrix4","matrixWorld","transformDirection","push","DecalVertex","clone","clipGeometry","inVertices","plane2","outVertices","s","Math","abs","dot","i","length","v1Out","v2Out","v3Out","nV1","nV2","nV3","nV4","total","clip","v0","v1","p","d0","s0","x","y","z","copy","invert","geometry","isGeometry","console","error","positionAttribute","attributes","normalAttribute","index","count","fromBufferAttribute","getX","set","decalVertex","generate","this","setAttribute","Float32BufferAttribute","vecToArray","vec","arguments","undefined","Array","isArray","THREE","Decal","React","_ref","forwardRef","debug","depthTest","polygonOffsetFactor","map","children","rotation","scale","props","ref","current","helper","parent","target","Error","state","applyProps","identity","o","lookAt","rotateZ","traverse","child","raycast","dispose","_extends","wireframe","refs","value","forEach","OrthographicCamera","envMap","resolution","frames","Infinity","makeDefault","useThree","_ref2","camera","_ref3","_ref4","cameraRef","groupRef","fbo","useFBO","manual","updateProjectionMatrix","oldCam","oldEnvMap","functional","useFrame","visible","gl","setRenderTarget","scene","background","render","left","width","right","top","height","bottom","mergeRefs","texture","RenderHud","defaultScene","defaultCamera","renderPriority","oldCLear","autoClear","clearDepth","onPointerOver","Hud","hudScene","createPortal","events","priority","Context","useGizmoContext","turnRate","PI","dummy","Object3D","matrix","q1","q2","Quaternion","targetPosition","GizmoHelper","alignment","margin","onUpdate","onTarget","mainCamera","defaultControls","controls","invalidate","gizmoRef","virtualCam","animating","radius","focusPoint","defaultUp","up","tweenCamera","direction","distanceTo","quaternion","multiplyScalar","add","_","delta","_gizmoRef$current","angleTo","step","rotateTowards","applyQuaternion","normalize","update","setFromRotationMatrix","gizmoHelperContext","marginX","marginY","endsWith","startsWith","Provider","Axis","color","args","toneMapped","AxisHead","onClick","font","disabled","arcStyle","label","labelColor","axisHeadScale","canvas","document","createElement","context","getContext","beginPath","arc","closePath","fillStyle","fill","textAlign","fillText","CanvasTexture","active","setActive","e","stopPropagation","onPointerOut","capabilities","getMaxAnisotropy","alphaTest","opacity","GizmoViewport","hideNegativeAxes","hideAxisHeads","axisColors","axisScale","labels","colorX","colorY","colorZ","axisHeadProps","onPointerDown","object","IsObject","url","Object","useTexture","input","onLoad","textures","useLoader","TextureLoader","values","useLayoutEffect","useEffect","initTexture","keyed","key","preload","clear","v2","v3","defaultCalculatePosition","el","objectPos","setFromMatrixPosition","project","widthHalf","heightHalf","epsilon","getCSSMatrix","multipliers","prepend","matrix3d","elements","getCameraCSSMatrix","getObjectCSSMatrix","factor","f","Html","eps","style","className","center","fullscreen","portal","distanceFactor","sprite","transform","occlude","onOcclude","castShadow","receiveShadow","material","zIndexRange","calculatePosition","as","wrapperClass","pointerEvents","raycaster","viewport","root","group","oldZoom","oldPosition","transformOuterRef","transformInnerRef","connected","domElement","parentNode","occlusionMeshRef","isMeshSizeSet","isRayCastOcclusion","isRefObject","zIndex","concat","floor","currentRoot","ReactDOM","updateMatrixWorld","cssText","appendChild","removeChild","unmount","styles","transformStyle","transformInnerStyles","_root$current","_root$current2","updateWorldMatrix","zoom","isBehindCamera","cameraPos","deltaCamObj","sub","camDir","getWorldDirection","isObjectBehindCamera","raytraceTarget","item","previouslyVisible","isvisible","elPos","screenPos","setFromCamera","intersects","intersectObjects","intersectionDistance","distance","ray","origin","isObjectVisible","display","halfRange","zRange","PerspectiveCamera","dist","A","far","near","B","round","objectZIndex","fov","projectionMatrix","isOrthographicCamera","cameraMatrix","matrixWorldInverse","cameraTransform","transpose","copyPosition","perspective","vFOV","tan","objectScale","clientWidth","clientHeight","divideScalar","setScalar","ratio","w","h","ele","shaders","vertexShader","fragmentShader","side","DoubleSide","_box","Box3","_vector","LineSegmentsGeometry","InstancedBufferGeometry","isLineSegmentsGeometry","type","setIndex","start","instanceStart","end","instanceEnd","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","instanceBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","setColors","colors","itemSize","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","WireframeGeometry","fromLineSegments","setFromBufferAttribute","union","Sphere","getCenter","maxRadiusSq","il","max","distanceToSquared","sqrt","isNaN","toJSON","applyMatrix","warn","LineMaterial","ShaderMaterial","parameters","uniforms","UniformsUtils","merge","UniformsLib","common","fog","worldUnits","linewidth","Vector2","dashOffset","dashScale","dashSize","gapSize","parseInt","REVISION","replace","clipping","isLineMaterial","onBeforeCompile","transparent","defines","USE_LINE_COLOR_ALPHA","defineProperties","enumerable","get","diffuse","WORLD_UNITS","dashed","Boolean","USE_DASH","alphaToCoverage","USE_ALPHA_TO_COVERAGE","extensions","derivatives","setValues","_start","_end","_start4","Vector4","_end4","_ssOrigin","_ssOrigin3","_mvMatrix","_line","Line3","_closestPoint","_sphere","_clipToWorldVector","_ray","_instanceStart","_instanceEnd","_lineWidth","getWorldSpaceHalfWidth","projectionMatrixInverse","LineSegments2","Mesh","random","isLineSegments2","computeLineDistances","lineDistances","j","l","instanceDistanceBuffer","threshold","params","Line2","sphereMargin","boxMargin","distanceToPoint","intersectsSphere","expandByScalar","intersectsBox","pointOnLine","point","distanceSqToSegment","face","faceIndex","uv","uv2","raycastWorldUnits","at","multiplyMatrices","deltaDist","t","lerp","param","closestPointToPointParameter","zPos","MathUtils","isInClipSpace","isInside","raycastScreenSpace","LineGeometry","isLineGeometry","points","fromLine","line","isLine2","Line","vertexColors","lineWidth","segments","rest","_vertexColors$","line2","lineMaterial","lineGeom","geom","pValues","flat","cValues","c","Color","toArray","attach","vec1","vec2","upV","offsetMatrix","AxisArrow","axis","translation","translationLimits","annotations","annotationsClass","fixed","hoveredColor","onDragStart","onDrag","onDragEnd","userData","camControls","divRef","objRef","clickInfo","offset0","isHovered","setIsHovered","innerText","toFixed","extractRotation","clickPoint","dir","component","directions","enabled","setPointerCapture","pointerId","onPointerMove","min","offset","calculateOffset","rayStart","rayDir","e1","e2","e3","makeTranslation","onPointerUp","releasePointerCapture","cylinderLength","coneWidth","coneLength","matrixL","setFromUnitVectors","makeRotationFromQuaternion","color_","matrixAutoUpdate","padding","borderRadius","whiteSpace","polygonOffset","renderOrder","clickDir","intersectionDir","toDegrees","radians","minimizeAngle","angle","result","fmod","num","denom","k","rotMatrix","posNew","intersection","AxisRotator","dir1","dir2","rotationLimits","angle0","setFromMatrixColumn","setFromNormalAndCoplanarPoint","intersectPlane","negate","deltaAngle","calculateAngle","intersectionPoint","dote1e1","dote2e2","uClick","vClick","uIntersection","vIntersection","angleClick","atan2","degrees","shiftKey","toRadians","clamp","makeRotationAxis","dir1N","dir2N","makeBasis","cross","r","cos","sin","PlaneSlider","offsetX0","offsetY0","minX","maxX","minY","maxY","offsetX","offsetY","decomposeIntoBasis","i1","e2DegrowthOrder","sort","a","b","getComponent","i2","a1","a2","b1","b2","c1","pos1","tV0","tV1","tV2","getPoint3","point2","zValue","vector","unproject","mL0","mW0","mP","mPInv","mW","mL","mL0Inv","mdL","bb","bbObj","vCenter","vSize","vAnchorOffset","vPosition","xDir","yDir","zDir","PivotControls","fRef","autoTransform","anchor","disableAxes","disableSliders","disableRotations","activeAxes","parentRef","childrenRef","makeEmpty","obj","premultiply","multiply","config","mdW","sf","calculateScaleFactor","point3","radiusPx","getPoint2","point2off","setComponent","point3off","getWorldPosition","_gizmoRef$current2","_gizmoRef$current3"],"sourceRoot":""}