"use strict";(self.webpackChunkdoor=self.webpackChunkdoor||[]).push([[481],{9577:(t,e,i)=>{i.d(e,{A:()=>r});var s=i(5043),o=i(579);const r=t=>{let e=100,i=t.boxSize;const[r,n]=(0,s.useState)(!1);return(0,o.jsx)(o.Fragment,{children:t.boxSize.cuts.map(((s,a)=>(0,o.jsxs)("mesh",{rotation:"square"===s.forma?[0,0,s.rotation[2]]:[Math.PI/2,0,0],position:[s.position[0],s.position[1],0],onContextMenu:()=>function(e){t.setBoxSize({...i,cuts:i.cuts.filter(((t,i)=>i!==e))})}(a),onPointerOver:t=>n(a),onPointerOut:t=>n(!1),children:["square"===s.forma?(0,o.jsx)("boxGeometry",{args:[s.width/e,s.height/e,i.thickness/e]}):(0,o.jsx)("cylinderGeometry",{args:[s.width/2/e,s.width/2/e,i.thickness/e]}),(0,o.jsx)("meshPhongMaterial",{color:r===a?"red":"#fff",transparent:!0,opacity:r!==a?0:.6})]},a)))})}},6481:(t,e,i)=>{i.r(e),i.d(e,{default:()=>V});i(4391);var s=i(5043),o=i(2029),r=i(4315),n=i(7551),a=i(9408),h=(i(7525),i(9577),i(9456)),l=(i(6413),i(1278),i(2201));const c=/^[og]\s*(.+)?/,d=/^mtllib /,u=/^usemtl /,m=/^usemap /,g=/\s+/,p=new a.Vector3,f=new a.Vector3,b=new a.Vector3,x=new a.Vector3,w=new a.Vector3,y=new a.Color;function v(){const t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);const i=this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,e){const i=this._finalize(!1);i&&(i.inherited||i.groupCount<=0)&&this.materials.splice(i.index,1);const s={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==i?i.smooth:this.smooth,groupStart:void 0!==i?i.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){const e={index:"number"===typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(s),s},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){const e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(let i=this.materials.length-1;i>=0;i--)this.materials[i].groupCount<=0&&this.materials.splice(i,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},i&&i.name&&"function"===typeof i.clone){const t=i.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)},finalize:function(){this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){const i=parseInt(t,10);return 3*(i>=0?i-1:i+e/3)},parseNormalIndex:function(t,e){const i=parseInt(t,10);return 3*(i>=0?i-1:i+e/3)},parseUVIndex:function(t,e){const i=parseInt(t,10);return 2*(i>=0?i-1:i+e/2)},addVertex:function(t,e,i){const s=this.vertices,o=this.object.geometry.vertices;o.push(s[t+0],s[t+1],s[t+2]),o.push(s[e+0],s[e+1],s[e+2]),o.push(s[i+0],s[i+1],s[i+2])},addVertexPoint:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,i){const s=this.normals,o=this.object.geometry.normals;o.push(s[t+0],s[t+1],s[t+2]),o.push(s[e+0],s[e+1],s[e+2]),o.push(s[i+0],s[i+1],s[i+2])},addFaceNormal:function(t,e,i){const s=this.vertices,o=this.object.geometry.normals;p.fromArray(s,t),f.fromArray(s,e),b.fromArray(s,i),w.subVectors(b,f),x.subVectors(p,f),w.cross(x),w.normalize(),o.push(w.x,w.y,w.z),o.push(w.x,w.y,w.z),o.push(w.x,w.y,w.z)},addColor:function(t,e,i){const s=this.colors,o=this.object.geometry.colors;void 0!==s[t]&&o.push(s[t+0],s[t+1],s[t+2]),void 0!==s[e]&&o.push(s[e+0],s[e+1],s[e+2]),void 0!==s[i]&&o.push(s[i+0],s[i+1],s[i+2])},addUV:function(t,e,i){const s=this.uvs,o=this.object.geometry.uvs;o.push(s[t+0],s[t+1]),o.push(s[e+0],s[e+1]),o.push(s[i+0],s[i+1])},addDefaultUV:function(){const t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){const e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,i,s,o,r,n,a,h){const l=this.vertices.length;let c=this.parseVertexIndex(t,l),d=this.parseVertexIndex(e,l),u=this.parseVertexIndex(i,l);if(this.addVertex(c,d,u),this.addColor(c,d,u),void 0!==n&&""!==n){const t=this.normals.length;c=this.parseNormalIndex(n,t),d=this.parseNormalIndex(a,t),u=this.parseNormalIndex(h,t),this.addNormal(c,d,u)}else this.addFaceNormal(c,d,u);if(void 0!==s&&""!==s){const t=this.uvs.length;c=this.parseUVIndex(s,t),d=this.parseUVIndex(o,t),u=this.parseUVIndex(r,t),this.addUV(c,d,u),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";const e=this.vertices.length;for(let i=0,s=t.length;i<s;i++){const s=this.parseVertexIndex(t[i],e);this.addVertexPoint(s),this.addColor(s)}},addLineGeometry:function(t,e){this.object.geometry.type="Line";const i=this.vertices.length,s=this.uvs.length;for(let o=0,r=t.length;o<r;o++)this.addVertexLine(this.parseVertexIndex(t[o],i));for(let o=0,r=e.length;o<r;o++)this.addUVLine(this.parseUVIndex(e[o],s))}};return t.startObject("",!1),t}class j extends a.Loader{constructor(t){super(t),this.materials=null}load(t,e,i,s){const o=this,r=new a.FileLoader(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(function(i){try{e(o.parse(i))}catch(r){s?s(r):console.error(r),o.manager.itemError(t)}}),i,s)}setMaterials(t){return this.materials=t,this}parse(t){const e=new v;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));const i=t.split("\n");let s=[];for(let r=0,n=i.length;r<n;r++){const t=i[r].trimStart();if(0===t.length)continue;const o=t.charAt(0);if("#"!==o)if("v"===o){const i=t.split(g);switch(i[0]){case"v":e.vertices.push(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3])),i.length>=7?(y.setRGB(parseFloat(i[4]),parseFloat(i[5]),parseFloat(i[6])).convertSRGBToLinear(),e.colors.push(y.r,y.g,y.b)):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3]));break;case"vt":e.uvs.push(parseFloat(i[1]),parseFloat(i[2]))}}else if("f"===o){const i=t.slice(1).trim().split(g),s=[];for(let t=0,e=i.length;t<e;t++){const e=i[t];if(e.length>0){const t=e.split("/");s.push(t)}}const o=s[0];for(let t=1,r=s.length-1;t<r;t++){const i=s[t],r=s[t+1];e.addFace(o[0],i[0],r[0],o[1],i[1],r[1],o[2],i[2],r[2])}}else if("l"===o){const i=t.substring(1).trim().split(" ");let s=[];const o=[];if(-1===t.indexOf("/"))s=i;else for(let t=0,e=i.length;t<e;t++){const e=i[t].split("/");""!==e[0]&&s.push(e[0]),""!==e[1]&&o.push(e[1])}e.addLineGeometry(s,o)}else if("p"===o){const i=t.slice(1).trim().split(" ");e.addPointGeometry(i)}else if(null!==(s=c.exec(t))){const t=(" "+s[0].slice(1).trim()).slice(1);e.startObject(t)}else if(u.test(t))e.object.startMaterial(t.substring(7).trim(),e.materialLibraries);else if(d.test(t))e.materialLibraries.push(t.substring(7).trim());else if(m.test(t))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===o){if(s=t.split(" "),s.length>1){const t=s[1].trim().toLowerCase();e.object.smooth="0"!==t&&"off"!==t}else e.object.smooth=!0;const i=e.object.currentMaterial();i&&(i.smooth=e.object.smooth)}else{if("\0"===t)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+t+'"')}}e.finalize();const o=new a.Group;o.materialLibraries=[].concat(e.materialLibraries);if(!0===!(1===e.objects.length&&0===e.objects[0].geometry.vertices.length))for(let r=0,n=e.objects.length;r<n;r++){const t=e.objects[r],i=t.geometry,s=t.materials,n="Line"===i.type,h="Points"===i.type;let l=!1;if(0===i.vertices.length)continue;const c=new a.BufferGeometry;c.setAttribute("position",new a.Float32BufferAttribute(i.vertices,3)),i.normals.length>0&&c.setAttribute("normal",new a.Float32BufferAttribute(i.normals,3)),i.colors.length>0&&(l=!0,c.setAttribute("color",new a.Float32BufferAttribute(i.colors,3))),!0===i.hasUVIndices&&c.setAttribute("uv",new a.Float32BufferAttribute(i.uvs,2));const d=[];for(let o=0,r=s.length;o<r;o++){const t=s[o],i=t.name+"_"+t.smooth+"_"+l;let r=e.materials[i];if(null!==this.materials)if(r=this.materials.create(t.name),!n||!r||r instanceof a.LineBasicMaterial){if(h&&r&&!(r instanceof a.PointsMaterial)){const t=new a.PointsMaterial({size:10,sizeAttenuation:!1});a.Material.prototype.copy.call(t,r),t.color.copy(r.color),t.map=r.map,r=t}}else{const t=new a.LineBasicMaterial;a.Material.prototype.copy.call(t,r),t.color.copy(r.color),r=t}void 0===r&&(r=n?new a.LineBasicMaterial:h?new a.PointsMaterial({size:1,sizeAttenuation:!1}):new a.MeshPhongMaterial,r.name=t.name,r.flatShading=!t.smooth,r.vertexColors=l,e.materials[i]=r),d.push(r)}let u;if(d.length>1){for(let t=0,e=s.length;t<e;t++){const e=s[t];c.addGroup(e.groupStart,e.groupCount,t)}u=n?new a.LineSegments(c,d):h?new a.Points(c,d):new a.Mesh(c,d)}else u=n?new a.LineSegments(c,d[0]):h?new a.Points(c,d[0]):new a.Mesh(c,d[0]);u.name=t.name,o.add(u)}else if(e.vertices.length>0){const t=new a.PointsMaterial({size:1,sizeAttenuation:!1}),i=new a.BufferGeometry;i.setAttribute("position",new a.Float32BufferAttribute(e.vertices,3)),e.colors.length>0&&void 0!==e.colors[0]&&(i.setAttribute("color",new a.Float32BufferAttribute(e.colors,3)),t.vertexColors=!0);const s=new a.Points(i,t);o.add(s)}return o}}var A=i(579);const z=t=>{let{scaleValue:e}=t,i=(0,h.d4)((t=>t.textureSelected));const o=(0,n.F)(j,"".concat("/door-3d","/door/10057_wooden_door_v3_iterations-2.obj")),r=(0,l.z)(i.url),c=(0,s.useMemo)((()=>{let t;return o.traverse((function(e){e instanceof a.Mesh&&(e.material.map=r,t=e.geometry)})),t}),[o]);return(0,A.jsx)("mesh",{castSwhadow:!0,geometry:c,scale:e,rotation:[-1.56,0,0],position:[0,-10,0],children:(0,A.jsx)("meshPhysicalMaterial",{map:r})})},V=t=>{let{scaleValue:e}=t;return(0,A.jsxs)(A.Fragment,{children:[(0,A.jsx)(z,{scaleValue:e}),(0,A.jsx)(o.z,{alignment:"bottom-right",margin:[80,80],children:(0,A.jsx)(r.t,{labelColor:"white",axisHeadScale:1})})]})}},7525:(t,e,i)=>{i.d(e,{A:()=>g});var s=i(5043),o=i(2201),r=i(6569),n=i(1940),a=i(2309),h=i(9408),l=i(9456),c=i(795);function d(t,e,i,s){var o=t.x<0?t.x-e.width/s/2:t.x+e.width/s/2,r=t.y<0?t.y-e.height/s/2:t.y+e.height/s/2;let n,a;3===i.forma?(n=new Array(-i.widthAll/s+i.widthRight/s/2,-i.widthAll/s+i.widthRight/s/2,i.widthRight/s/2,i.widthRight/s/2,-i.widthRight/s/2,-i.widthRight/s/2,-i.widthAll/s+i.widthRight/s,-i.widthAll/s+i.widthRight/s),a=new Array(-i.heightAll/s/2,i.heightAll/s/2,i.heightAll/s/2,-(i.heightAll/s/2-(i.heightAll-i.heightRight)/s),-(i.heightAll/s/2-(i.heightAll-i.heightRight)/s),i.heightAll/s/2-i.heightRight/s+i.heightInsideRight/s,(i.heightAll/2-(i.heightRight-i.heightInsideRight))/s,-i.heightAll/s/2)):2===i.forma&&(n=new Array(-i.widthVertical/s/2,-i.widthVertical/s/2,(i.widthAll-i.widthVertical/2)/s,(i.widthAll-i.widthVertical/2)/s,i.widthVertical/s/2,i.widthVertical/s/2),a=new Array(-i.heightAll/s/2,i.heightAll/s/2,i.heightAll/s/2,(i.heightAll-2*i.heightGorizonal)/s/2,(i.heightAll-2*i.heightGorizonal)/s/2,-i.heightAll/s/2));for(var h=n.length,l=h-1,c=!1,d=0;d<h;d++)(a[d]<=r&&r<a[l]||a[l]<=r&&r<a[d])&&o>(n[l]-n[d])*(r-a[d])/(a[l]-a[d])+n[d]&&(c=!c),l=d;return c}i(1278);var u=i(2018),m=i(579);const g=t=>{let e=100;const{visibleSink:i,sinkState:g}=(0,l.d4)((t=>t.scene)),f=(0,l.wA)(),[b,x]=(0,s.useState)([0,0,t.boxSize.thickness/e]),[w,y]=(0,s.useState)([0,0,0]),[v,j]=(0,s.useState)("rgb(236, 108, 108)");let A="".concat("/door-3d","/icons/circle.svg"),z=(0,o.z)(A);if(i)return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)("group",{position:[0,0,.25],children:(0,m.jsx)(r.n,{scale:.88,activeAxes:[!0,!0,!1],onDrag:i=>{const s=new h.Vector3,o=new h.Vector3,r=new h.Quaternion;i.decompose(s,r,o);const n=(new h.Euler).setFromQuaternion(r);!function(i){let s=Math.abs(i.x)+g.width/200<Math.abs(t.boxSize.widthAll/200),o=Math.abs(i.y)+(g.height||g.width)/200<Math.abs(t.boxSize.heightAll/200),r=0;3===t.boxSize.forma?(r=(t.boxSize.widthAll-t.boxSize.widthRight)/2/e,d(i,{width:g.width,height:g.height},t.boxSize,e)&&x([i.x+r,i.y,t.boxSize.thickness/e/2+.01])):2===t.boxSize.forma?(r=-(t.boxSize.widthAll-t.boxSize.widthVertical)/2/e,d(i,{width:g.width,height:g.height},t.boxSize,e)&&x([i.x+r,i.y,t.boxSize.thickness/e/2+.01])):(r=0,s=Math.abs(i.x)+g.width/200<Math.abs(t.boxSize.widthAll/200),o=Math.abs(i.y)+(g.height||g.width)/200<Math.abs(t.boxSize.heightAll/200),x([s?i.x+r:b[0],o?i.y:b[1],t.boxSize.thickness/e/2+.01]))}(s),y([n.x,n.y,n.z])},onDragEnd:()=>{}})}),(0,m.jsx)(n.C,{position:b,rotation:w,scale:"square"==g.forma?[g.width/100,g.height/100,1]:[g.width/100,g.width/100,1],color:v,children:"square"!==g.forma&&(0,m.jsx)("meshPhysicalMaterial",{transparent:!0,polygonOffset:!0,polygonOffsetFactor:-10,map:z,mapflipY:!1,mapanisotropy:16,iridescence:1,iridescenceIOR:1,iridescenceThicknessRange:[0,1400],roughness:1,clearcoat:.5,metalness:.75,toneMapped:!1})}),(0,m.jsx)(a.E,{transform:!0,zIndexRange:1,position:[b[0]+1.5,b[1]-1,t.boxSize.thickness/e/2],children:(0,m.jsx)(u.$,{style:p.buttonSink,icon:"pi pi-check",tooltip:"\u0412\u044b\u0440\u0435\u0437\u0430\u0442\u044c",onClick:()=>(t.setBoxSize({...t.boxSize,cuts:[...t.boxSize.cuts,{forma:g.forma,width:g.width,height:g.height,position:b,rotation:w}]}),void f((0,c.O)()))})})]})},p={buttonSink:{width:"25px",height:"15px"}}},1278:()=>{}}]);
//# sourceMappingURL=481.135d881e.chunk.js.map