{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { TEXTURE_LOAD, TEXTURE_NULL } from \"../types\";\nconst initialState = {\n  article: '',\n  ax_item_id: '',\n  chars: [],\n  collection: {},\n  name: '',\n  prices: [],\n  size: '',\n  units: [],\n  url: \"\",\n  long: 0,\n  width: 0\n};\nconst payload = {\n  article: 'n142019',\n  ax_item_id: 'n142019',\n  chars: [],\n  collection: {},\n  name: 'Surface Laboratory/Бардилио серый лаппатированныйZZ|119.5x320',\n  prices: [{\n    price_mst: 6878\n  }],\n  size: '160x320',\n  units: [],\n  images: [{\n    url: \"/image/invents/kerama%20marazzi/surface%20laboratory/n142019.jpg\"\n  }],\n  url: \"\",\n  long: 0,\n  width: 0\n};\nexport default function textureLoadReducer(state = initialState, action) {\n  const {\n    type /*payload*/\n  } = action;\n  switch (type) {\n    case TEXTURE_LOAD:\n      return {\n        ...state,\n        article: payload.article,\n        ax_item_id: payload.ax_item_id,\n        chars: payload.chars,\n        collection: payload.collection,\n        name: payload.name,\n        prices: payload.prices,\n        size: payload.size,\n        units: payload.units,\n        long: +payload.size.split('x')[1] * 10,\n        width: +payload.size.split('x')[0] * 10,\n        url: \"/textures/wood-3.jpg\"\n      };\n    case TEXTURE_NULL:\n      return {\n        ...state,\n        article: '',\n        ax_item_id: '',\n        chars: [],\n        collection: {},\n        name: '',\n        prices: [],\n        size: '',\n        units: [],\n        url: \"\",\n        long: 0,\n        width: 0\n      };\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"names":["createSlice","TEXTURE_LOAD","TEXTURE_NULL","initialState","article","ax_item_id","chars","collection","name","prices","size","units","url","long","width","payload","price_mst","images","textureLoadReducer","state","action","type","split"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/redux/reducers/texture-reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { TEXTURE_LOAD, TEXTURE_NULL } from \"../types\";\n\nconst initialState = {\n  article: '',\n  ax_item_id: '',\n  chars: [],\n  collection: {},\n  name: '',\n  prices: [],\n  size: '',\n  units: [],\n  url: \"\",\n  long: 0,\n  width: 0,\n}\n\nconst payload = {\n  article: 'n142019',\n  ax_item_id: 'n142019',\n  chars: [],\n  collection: {},\n  name: 'Surface Laboratory/Бардилио серый лаппатированныйZZ|119.5x320',\n  prices: [{price_mst: 6878},],\n  size: '160x320',\n  units: [],\n  images: [{url: \"/image/invents/kerama%20marazzi/surface%20laboratory/n142019.jpg\"},],\n  url: \"\",\n  long: 0,\n  width: 0,\n}\n\nexport default function textureLoadReducer(state = initialState, action) {\n  const { type, /*payload*/ } = action;\n\n  switch (type) {\n   \n    case TEXTURE_LOAD:\n      return {\n        ...state,\n        article: payload.article,\n        ax_item_id: payload.ax_item_id,\n        chars: payload.chars,\n        collection: payload.collection,\n        name: payload.name,\n        prices: payload.prices,\n        size: payload.size,\n        units: payload.units,\n\n        long: +payload.size.split('x')[1] * 10,\n        width: +payload.size.split('x')[0] * 10,\n        url: \"/textures/wood-3.jpg\",\n      }\n    case TEXTURE_NULL:\n      return {\n        ...state,\n\n        article: '',\n        ax_item_id: '',\n        chars: [],\n        collection: {},\n        name: '',\n        prices: [],\n        size: '',\n        units: [],\n        url: \"\",\n        long: 0,\n        width: 0,\n      }\n    default:\n      return state\n  }\n\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,YAAY,QAAQ,UAAU;AAErD,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,UAAU,EAAE,EAAE;EACdC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAI,EAAE,EAAE;EACRC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,GAAG,EAAE,EAAE;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAG;EACdX,OAAO,EAAE,SAAS;EAClBC,UAAU,EAAE,SAAS;EACrBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAI,EAAE,+DAA+D;EACrEC,MAAM,EAAE,CAAC;IAACO,SAAS,EAAE;EAAI,CAAC,CAAE;EAC5BN,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,EAAE;EACTM,MAAM,EAAE,CAAC;IAACL,GAAG,EAAE;EAAkE,CAAC,CAAE;EACpFA,GAAG,EAAE,EAAE;EACPC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AAED,eAAe,SAASI,kBAAkBA,CAACC,KAAK,GAAGhB,YAAY,EAAEiB,MAAM,EAAE;EACvE,MAAM;IAAEC,IAAI,CAAE;EAAY,CAAC,GAAGD,MAAM;EAEpC,QAAQC,IAAI;IAEV,KAAKpB,YAAY;MACf,OAAO;QACL,GAAGkB,KAAK;QACRf,OAAO,EAAEW,OAAO,CAACX,OAAO;QACxBC,UAAU,EAAEU,OAAO,CAACV,UAAU;QAC9BC,KAAK,EAAES,OAAO,CAACT,KAAK;QACpBC,UAAU,EAAEQ,OAAO,CAACR,UAAU;QAC9BC,IAAI,EAAEO,OAAO,CAACP,IAAI;QAClBC,MAAM,EAAEM,OAAO,CAACN,MAAM;QACtBC,IAAI,EAAEK,OAAO,CAACL,IAAI;QAClBC,KAAK,EAAEI,OAAO,CAACJ,KAAK;QAEpBE,IAAI,EAAE,CAACE,OAAO,CAACL,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QACtCR,KAAK,EAAE,CAACC,OAAO,CAACL,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QACvCV,GAAG,EAAE;MACP,CAAC;IACH,KAAKV,YAAY;MACf,OAAO;QACL,GAAGiB,KAAK;QAERf,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,CAAC,CAAC;QACdC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE;MACT,CAAC;IACH;MACE,OAAOK,KAAK;EAChB;AAEF;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}