{"ast":null,"code":"import { Triangle } from 'three';\nimport { setDebugContext } from '../operations/operationsUtils.js';\nclass TriangleIntersectData {\n  constructor(tri) {\n    this.triangle = new Triangle().copy(tri);\n    this.intersects = {};\n  }\n  addTriangle(index, tri) {\n    this.intersects[index] = new Triangle().copy(tri);\n  }\n  getIntersectArray() {\n    const array = [];\n    const {\n      intersects\n    } = this;\n    for (const key in intersects) {\n      array.push(intersects[key]);\n    }\n    return array;\n  }\n}\nclass TriangleIntersectionSets {\n  constructor() {\n    this.data = {};\n  }\n  addTriangleIntersection(ia, triA, ib, triB) {\n    const {\n      data\n    } = this;\n    if (!data[ia]) {\n      data[ia] = new TriangleIntersectData(triA);\n    }\n    data[ia].addTriangle(ib, triB);\n  }\n  getTrianglesAsArray(id = null) {\n    const {\n      data\n    } = this;\n    const arr = [];\n    if (id !== null) {\n      if (id in data) {\n        arr.push(data[id].triangle);\n      }\n    } else {\n      for (const key in data) {\n        arr.push(data[key].triangle);\n      }\n    }\n    return arr;\n  }\n  getTriangleIndices() {\n    return Object.keys(this.data).map(i => parseInt(i));\n  }\n  getIntersectionIndices(id) {\n    const {\n      data\n    } = this;\n    if (!data[id]) {\n      return [];\n    } else {\n      return Object.keys(data[id].intersects).map(i => parseInt(i));\n    }\n  }\n  getIntersectionsAsArray(id = null, id2 = null) {\n    const {\n      data\n    } = this;\n    const triSet = new Set();\n    const arr = [];\n    const addTriangles = key => {\n      if (!data[key]) return;\n      if (id2 !== null) {\n        if (data[key].intersects[id2]) {\n          arr.push(data[key].intersects[id2]);\n        }\n      } else {\n        const intersects = data[key].intersects;\n        for (const key2 in intersects) {\n          if (!triSet.has(key2)) {\n            triSet.add(key2);\n            arr.push(intersects[key2]);\n          }\n        }\n      }\n    };\n    if (id !== null) {\n      addTriangles(id);\n    } else {\n      for (const key in data) {\n        addTriangles(key);\n      }\n    }\n    return arr;\n  }\n  reset() {\n    this.data = {};\n  }\n}\nexport class OperationDebugData {\n  constructor() {\n    this.enabled = false;\n    this.triangleIntersectsA = new TriangleIntersectionSets();\n    this.triangleIntersectsB = new TriangleIntersectionSets();\n    this.intersectionEdges = [];\n  }\n  addIntersectingTriangles(ia, triA, ib, triB) {\n    const {\n      triangleIntersectsA,\n      triangleIntersectsB\n    } = this;\n    triangleIntersectsA.addTriangleIntersection(ia, triA, ib, triB);\n    triangleIntersectsB.addTriangleIntersection(ib, triB, ia, triA);\n  }\n  addEdge(edge) {\n    this.intersectionEdges.push(edge.clone());\n  }\n  reset() {\n    this.triangleIntersectsA.reset();\n    this.triangleIntersectsB.reset();\n    this.intersectionEdges = [];\n  }\n  init() {\n    if (this.enabled) {\n      this.reset();\n      setDebugContext(this);\n    }\n  }\n  complete() {\n    if (this.enabled) {\n      setDebugContext(null);\n    }\n  }\n}","map":{"version":3,"names":["Triangle","setDebugContext","TriangleIntersectData","constructor","tri","triangle","copy","intersects","addTriangle","index","getIntersectArray","array","key","push","TriangleIntersectionSets","data","addTriangleIntersection","ia","triA","ib","triB","getTrianglesAsArray","id","arr","getTriangleIndices","Object","keys","map","i","parseInt","getIntersectionIndices","getIntersectionsAsArray","id2","triSet","Set","addTriangles","key2","has","add","reset","OperationDebugData","enabled","triangleIntersectsA","triangleIntersectsB","intersectionEdges","addIntersectingTriangles","addEdge","edge","clone","init","complete"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/node_modules/three-bvh-csg/src/core/debug/OperationDebugData.js"],"sourcesContent":["import { Triangle } from 'three';\nimport { setDebugContext } from '../operations/operationsUtils.js';\n\nclass TriangleIntersectData {\n\n\tconstructor( tri ) {\n\n\t\tthis.triangle = new Triangle().copy( tri );\n\t\tthis.intersects = {};\n\n\t}\n\n\taddTriangle( index, tri ) {\n\n\t\tthis.intersects[ index ] = new Triangle().copy( tri );\n\n\t}\n\n\tgetIntersectArray() {\n\n\t\tconst array = [];\n\t\tconst { intersects } = this;\n\t\tfor ( const key in intersects ) {\n\n\t\t\tarray.push( intersects[ key ] );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n}\n\nclass TriangleIntersectionSets {\n\n\tconstructor() {\n\n\t\tthis.data = {};\n\n\t}\n\n\taddTriangleIntersection( ia, triA, ib, triB ) {\n\n\t\tconst { data } = this;\n\t\tif ( ! data[ ia ] ) {\n\n\t\t\tdata[ ia ] = new TriangleIntersectData( triA );\n\n\t\t}\n\n\t\tdata[ ia ].addTriangle( ib, triB );\n\n\t}\n\n\tgetTrianglesAsArray( id = null ) {\n\n\t\tconst { data } = this;\n\t\tconst arr = [];\n\n\t\tif ( id !== null ) {\n\n\t\t\tif ( id in data ) {\n\n\t\t\t\tarr.push( data[ id ].triangle );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tfor ( const key in data ) {\n\n\t\t\t\tarr.push( data[ key ].triangle );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn arr;\n\n\t}\n\n\tgetTriangleIndices() {\n\n\t\treturn Object.keys( this.data ).map( i => parseInt( i ) );\n\n\t}\n\n\tgetIntersectionIndices( id ) {\n\n\t\tconst { data } = this;\n\t\tif ( ! data[ id ] ) {\n\n\t\t\treturn [];\n\n\t\t} else {\n\n\t\t\treturn Object.keys( data[ id ].intersects ).map( i => parseInt( i ) );\n\n\n\t\t}\n\n\t}\n\n\tgetIntersectionsAsArray( id = null, id2 = null ) {\n\n\t\tconst { data } = this;\n\t\tconst triSet = new Set();\n\t\tconst arr = [];\n\n\t\tconst addTriangles = key => {\n\n\t\t\tif ( ! data[ key ] ) return;\n\n\t\t\tif ( id2 !== null ) {\n\n\t\t\t\tif ( data[ key ].intersects[ id2 ] ) {\n\n\t\t\t\t\tarr.push( data[ key ].intersects[ id2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst intersects = data[ key ].intersects;\n\t\t\t\tfor ( const key2 in intersects ) {\n\n\t\t\t\t\tif ( ! triSet.has( key2 ) ) {\n\n\t\t\t\t\t\ttriSet.add( key2 );\n\t\t\t\t\t\tarr.push( intersects[ key2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tif ( id !== null ) {\n\n\t\t\taddTriangles( id );\n\n\t\t} else {\n\n\t\t\tfor ( const key in data ) {\n\n\t\t\t\taddTriangles( key );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn arr;\n\n\t}\n\n\treset() {\n\n\t\tthis.data = {};\n\n\t}\n\n}\n\nexport class OperationDebugData {\n\n\tconstructor() {\n\n\t\tthis.enabled = false;\n\t\tthis.triangleIntersectsA = new TriangleIntersectionSets();\n\t\tthis.triangleIntersectsB = new TriangleIntersectionSets();\n\t\tthis.intersectionEdges = [];\n\n\t}\n\n\taddIntersectingTriangles( ia, triA, ib, triB ) {\n\n\t\tconst { triangleIntersectsA, triangleIntersectsB } = this;\n\t\ttriangleIntersectsA.addTriangleIntersection( ia, triA, ib, triB );\n\t\ttriangleIntersectsB.addTriangleIntersection( ib, triB, ia, triA );\n\n\t}\n\n\taddEdge( edge ) {\n\n\t\tthis.intersectionEdges.push( edge.clone() );\n\n\t}\n\n\treset() {\n\n\t\tthis.triangleIntersectsA.reset();\n\t\tthis.triangleIntersectsB.reset();\n\t\tthis.intersectionEdges = [];\n\n\t}\n\n\tinit() {\n\n\t\tif ( this.enabled ) {\n\n\t\t\tthis.reset();\n\t\t\tsetDebugContext( this );\n\n\t\t}\n\n\t}\n\n\tcomplete() {\n\n\t\tif ( this.enabled ) {\n\n\t\t\tsetDebugContext( null );\n\n\t\t}\n\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}