{"ast":null,"code":"export function inPoly(position, sinkState, boxSize, scal) {\n  // console.log(\"!!!!!!!!!\", position, sinkState, boxSize, scal)\n  var x = position.x < 0 ? position.x - sinkState.width / scal / 2 : position.x + sinkState.width / scal / 2;\n  var y = position.y < 0 ? position.y - sinkState.height / scal / 2 : position.y + sinkState.height / scal / 2;\n  let xp, yp;\n  if (boxSize.forma === 3) {\n    // ограничение координат для П-образной формы\n    // Координаты  П образной модели\n    xp = new Array(\n    // Массив X-координат полигона\n    -boxSize.widthAll / scal + boxSize.widthRight / scal / 2,\n    //1\n    -boxSize.widthAll / scal + boxSize.widthRight / scal / 2,\n    //2\n    boxSize.widthRight / scal / 2,\n    //3\n    boxSize.widthRight / scal / 2,\n    //4\n    -boxSize.widthRight / scal / 2,\n    //5\n    -boxSize.widthRight / scal / 2,\n    //6\n    -boxSize.widthAll / scal + boxSize.widthRight / scal,\n    //7\n    -boxSize.widthAll / scal + boxSize.widthRight / scal) //8\n    ; // Массив X-координат полигона\n    yp = new Array(\n    // Массив Y-координат полигона\n    -boxSize.heightAll / scal / 2,\n    //1\n    boxSize.heightAll / scal / 2,\n    //2\n    boxSize.heightAll / scal / 2,\n    //3\n    -(boxSize.heightAll / scal / 2 - (boxSize.heightAll - boxSize.heightRight) / scal),\n    //4\n    -(boxSize.heightAll / scal / 2 - (boxSize.heightAll - boxSize.heightRight) / scal),\n    //5\n    boxSize.heightAll / scal / 2 - boxSize.heightRight / scal + boxSize.heightInsideRight / scal,\n    //6\n    (boxSize.heightAll / 2 - (boxSize.heightRight - boxSize.heightInsideRight)) / scal,\n    //7\n    -boxSize.heightAll / scal / 2) //8\n    ; // Массив Y-координат полигона\n  } else if (boxSize.forma === 2) {\n    // ограничение координат для Г-образной формы\n    xp = new Array(\n    // Массив X-координат полигона\n    -boxSize.widthVertical / scal / 2, -boxSize.widthVertical / scal / 2, (boxSize.widthAll - boxSize.widthVertical / 2) / scal, (boxSize.widthAll - boxSize.widthVertical / 2) / scal, boxSize.widthVertical / scal / 2, boxSize.widthVertical / scal / 2); // Массив X-координат полигона\n    yp = new Array(\n    // Массив Y-координат полигона\n    -boxSize.heightAll / scal / 2, boxSize.heightAll / scal / 2, boxSize.heightAll / scal / 2, (boxSize.heightAll - boxSize.heightGorizonal * 2) / scal / 2, (boxSize.heightAll - boxSize.heightGorizonal * 2) / scal / 2, -boxSize.heightAll / scal / 2); // Массив Y-координат полигона\n  }\n  var npol = xp.length;\n  var j = npol - 1;\n  var c = false;\n  for (var i = 0; i < npol; i++) {\n    if ((yp[i] <= y && y < yp[j] || yp[j] <= y && y < yp[i]) && x > (xp[j] - xp[i]) * (y - yp[i]) / (yp[j] - yp[i]) + xp[i]) {\n      c = !c;\n    }\n    j = i;\n  }\n  return c;\n}","map":{"version":3,"names":["inPoly","position","sinkState","boxSize","scal","x","width","y","height","xp","yp","forma","Array","widthAll","widthRight","heightAll","heightRight","heightInsideRight","widthVertical","heightGorizonal","npol","length","j","c","i"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/components/3D/inPoly.js"],"sourcesContent":["export function inPoly(position, sinkState, boxSize, scal){\n    // console.log(\"!!!!!!!!!\", position, sinkState, boxSize, scal)\n    var x = position.x<0 ? position.x - sinkState.width/scal/2 : position.x + sinkState.width/scal/2;\n    var y = position.y<0 ? position.y - sinkState.height/scal/2 : position.y + sinkState.height/scal/2;\n    let xp, yp\n\n    if(boxSize.forma === 3){ // ограничение координат для П-образной формы\n        // Координаты  П образной модели\n        xp = new Array( // Массив X-координат полигона\n            -boxSize.widthAll/scal+boxSize.widthRight/scal/2, //1\n            -boxSize.widthAll/scal+boxSize.widthRight/scal/2, //2\n            boxSize.widthRight/scal/2, //3\n            boxSize.widthRight/scal/2, //4\n            -boxSize.widthRight/scal/2, //5\n            -boxSize.widthRight/scal/2, //6\n            -boxSize.widthAll/scal+boxSize.widthRight/scal, //7\n            -boxSize.widthAll/scal+boxSize.widthRight/scal, //8\n        ); // Массив X-координат полигона\n        yp = new Array( // Массив Y-координат полигона\n            -boxSize.heightAll/scal/2, //1\n            boxSize.heightAll/scal/2, //2\n            boxSize.heightAll/scal/2, //3\n            -( boxSize.heightAll/scal/2 - (boxSize.heightAll - boxSize.heightRight)/scal ), //4\n            -( boxSize.heightAll/scal/2 - (boxSize.heightAll - boxSize.heightRight)/scal ), //5\n            boxSize.heightAll/scal/2 - boxSize.heightRight/scal + boxSize.heightInsideRight/scal, //6\n            (boxSize.heightAll/2 - (boxSize.heightRight - boxSize.heightInsideRight))/scal, //7\n            -boxSize.heightAll/scal/2, //8\n        ); // Массив Y-координат полигона\n       \n    }else if(boxSize.forma === 2){ // ограничение координат для Г-образной формы\n        xp = new Array( // Массив X-координат полигона\n            -boxSize.widthVertical/scal/2,\n            -boxSize.widthVertical/scal/2,\n            (boxSize.widthAll-boxSize.widthVertical/2)/scal,\n            (boxSize.widthAll-boxSize.widthVertical/2)/scal,\n            boxSize.widthVertical/scal/2,\n            boxSize.widthVertical/scal/2,\n        ); // Массив X-координат полигона\n        yp = new Array( // Массив Y-координат полигона\n            -boxSize.heightAll/scal/2,\n            boxSize.heightAll/scal/2,\n            boxSize.heightAll/scal/2,\n            (boxSize.heightAll - boxSize.heightGorizonal*2)/scal/2,\n            (boxSize.heightAll - boxSize.heightGorizonal*2)/scal/2,\n            -boxSize.heightAll/scal/2,\n        ); // Массив Y-координат полигона\n       \n    }\n\n    var npol = xp.length;\n    var j = npol - 1;\n    var c = false;\n\n    for (var i = 0; i < npol;i++){\n        if ((((yp[i]<=y) && (y<yp[j])) || ((yp[j]<=y) && (y<yp[i]))) &&\n          (x > (xp[j] - xp[i]) * (y - yp[i]) / (yp[j] - yp[i]) + xp[i])) {\n          c = !c\n        }\n      j = i;\n    }\n    return c;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}