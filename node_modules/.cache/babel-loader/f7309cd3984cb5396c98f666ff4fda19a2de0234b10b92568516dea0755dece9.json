{"ast":null,"code":"var _jsxFileName = \"/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/components/textures/TexturesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button } from 'primereact/button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTextureSelected } from \"../../redux/reducers/textures-reducer.js\";\nimport { textureAction } from \"../../redux/actions/texture-action.js\";\nimport \"./TexturesList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let texturesArray = [{\n  id: 1,\n  name: 'дерево 1',\n  url: '../textures/wood-1.jpg'\n}, {\n  id: 2,\n  name: 'дерево 2',\n  url: '../textures/wood-2.jpg'\n}, {\n  id: 3,\n  name: 'дерево 3',\n  url: '../textures/wood-3.jpg'\n}, {\n  id: 4,\n  name: 'Google',\n  url: 'https://play-lh.googleusercontent.com/1-hPxafOxdYpYZEOKzNIkSP43HXCNftVJVttoo4ucl7rsMASXW3Xr6GlXURCubE1tA=w3840-h2160-rw'\n}];\nconst TexturesList = () => {\n  _s();\n  const textureSelected = useSelector(state => state.textureSelected);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textures-lists\",\n    children: texturesArray.map(texture => /*#__PURE__*/_jsxDEV(Button, {\n      className: `texture-item ${texture.id === textureSelected.id ? \"active\" : \"\"}`,\n      style: {\n        backgroundImage: `url(${texture.url})`\n      },\n      onClick: () => dispatch(setTextureSelected(texture)),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", texture.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, texture.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(TexturesList, \"4YT2JGHehm+b1yU+jhPCrKvLLEQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TexturesList;\nexport default TexturesList;\nvar _c;\n$RefreshReg$(_c, \"TexturesList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","useSelector","useDispatch","setTextureSelected","textureAction","jsxDEV","_jsxDEV","texturesArray","id","name","url","TexturesList","_s","textureSelected","state","dispatch","className","children","map","texture","style","backgroundImage","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/components/textures/TexturesList.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\n\nimport { Button } from 'primereact/button';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setTextureSelected } from \"../../redux/reducers/textures-reducer.js\";\nimport { textureAction } from \"../../redux/actions/texture-action.js\"\n\nimport \"./TexturesList.scss\"\n\nexport let texturesArray = [\n    { id: 1, name: 'дерево 1', url: '../textures/wood-1.jpg' },\n    { id: 2, name: 'дерево 2', url: '../textures/wood-2.jpg' },\n    { id: 3, name: 'дерево 3', url: '../textures/wood-3.jpg' },\n    { id: 4, name: 'Google', url: 'https://play-lh.googleusercontent.com/1-hPxafOxdYpYZEOKzNIkSP43HXCNftVJVttoo4ucl7rsMASXW3Xr6GlXURCubE1tA=w3840-h2160-rw' },\n]\n\nconst TexturesList = () => {\n    const textureSelected = useSelector((state) => state.textureSelected);\n    const dispatch = useDispatch()\n\n    return(\n        <div className='textures-lists'>\n            {texturesArray.map((texture)=>(\n                <Button key={texture.id} \n                    className={`texture-item ${texture.id === textureSelected.id ? \"active\" : \"\" }`}\n                    style={{ backgroundImage: `url(${texture.url})` }}\n                    onClick={()=> dispatch(setTextureSelected(texture))}>\n                    <p> {texture.name} </p>\n                </Button>\n            ))\n            }\n        </div>\n    )\n}\n\nexport default TexturesList"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,SAASC,MAAM,QAAQ,mBAAmB;AAE1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,0CAA0C;AAC7E,SAASC,aAAa,QAAQ,uCAAuC;AAErE,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,OAAO,IAAIC,aAAa,GAAG,CACvB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE;AAAyB,CAAC,EAC1D;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE;AAAyB,CAAC,EAC1D;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE;AAAyB,CAAC,EAC1D;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE;AAA0H,CAAC,CAC5J;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,eAAe,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EACrE,MAAME,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,oBACII,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BV,aAAa,CAACW,GAAG,CAAEC,OAAO,iBACvBb,OAAA,CAACN,MAAM;MACHgB,SAAS,EAAG,gBAAeG,OAAO,CAACX,EAAE,KAAKK,eAAe,CAACL,EAAE,GAAG,QAAQ,GAAG,EAAI,EAAE;MAChFY,KAAK,EAAE;QAAEC,eAAe,EAAG,OAAMF,OAAO,CAACT,GAAI;MAAG,CAAE;MAClDY,OAAO,EAAEA,CAAA,KAAKP,QAAQ,CAACZ,kBAAkB,CAACgB,OAAO,CAAC,CAAE;MAAAF,QAAA,eACpDX,OAAA;QAAAW,QAAA,GAAG,GAAC,EAACE,OAAO,CAACV,IAAI,EAAC,GAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC,GAJdP,OAAO,CAACX,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKf,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAAAd,EAAA,CAjBKD,YAAY;EAAA,QACUV,WAAW,EAClBC,WAAW;AAAA;AAAAyB,EAAA,GAF1BhB,YAAY;AAmBlB,eAAeA,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}