{"ast":null,"code":"const DIST_EPSILON = 1e-5;\nconst ANGLE_EPSILON = 1e-4;\nexport class RaySet {\n  constructor() {\n    this._rays = [];\n  }\n  addRay(ray) {\n    this._rays.push(ray);\n  }\n  findClosestRay(ray) {\n    const rays = this._rays;\n    const inv = ray.clone();\n    inv.direction.multiplyScalar(-1);\n    let bestScore = Infinity;\n    let bestRay = null;\n    for (let i = 0, l = rays.length; i < l; i++) {\n      const r = rays[i];\n      if (skipRay(r, ray) && skipRay(r, inv)) {\n        continue;\n      }\n      const rayScore = scoreRays(r, ray);\n      const invScore = scoreRays(r, inv);\n      const score = Math.min(rayScore, invScore);\n      if (score < bestScore) {\n        bestScore = score;\n        bestRay = r;\n      }\n    }\n    return bestRay;\n    function skipRay(r0, r1) {\n      const distOutOfThreshold = r0.origin.distanceTo(r1.origin) > DIST_EPSILON;\n      const angleOutOfThreshold = r0.direction.angleTo(r1.direction) > ANGLE_EPSILON;\n      return angleOutOfThreshold || distOutOfThreshold;\n    }\n    function scoreRays(r0, r1) {\n      const originDistance = r0.origin.distanceTo(r1.origin);\n      const angleDistance = r0.direction.angleTo(r1.direction);\n      return originDistance / DIST_EPSILON + angleDistance / ANGLE_EPSILON;\n    }\n  }\n}","map":{"version":3,"names":["DIST_EPSILON","ANGLE_EPSILON","RaySet","constructor","_rays","addRay","ray","push","findClosestRay","rays","inv","clone","direction","multiplyScalar","bestScore","Infinity","bestRay","i","l","length","r","skipRay","rayScore","scoreRays","invScore","score","Math","min","r0","r1","distOutOfThreshold","origin","distanceTo","angleOutOfThreshold","angleTo","originDistance","angleDistance"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/node_modules/three-bvh-csg/src/core/utils/RaySet.js"],"sourcesContent":["const DIST_EPSILON = 1e-5;\nconst ANGLE_EPSILON = 1e-4;\n\nexport class RaySet {\n\n\tconstructor() {\n\n\t\tthis._rays = [];\n\n\t}\n\n\taddRay( ray ) {\n\n\t\tthis._rays.push( ray );\n\n\t}\n\n\tfindClosestRay( ray ) {\n\n\t\tconst rays = this._rays;\n\t\tconst inv = ray.clone();\n\t\tinv.direction.multiplyScalar( - 1 );\n\n\t\tlet bestScore = Infinity;\n\t\tlet bestRay = null;\n\t\tfor ( let i = 0, l = rays.length; i < l; i ++ ) {\n\n\t\t\tconst r = rays[ i ];\n\t\t\tif ( skipRay( r, ray ) && skipRay( r, inv ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst rayScore = scoreRays( r, ray );\n\t\t\tconst invScore = scoreRays( r, inv );\n\t\t\tconst score = Math.min( rayScore, invScore );\n\t\t\tif ( score < bestScore ) {\n\n\t\t\t\tbestScore = score;\n\t\t\t\tbestRay = r;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bestRay;\n\n\t\tfunction skipRay( r0, r1 ) {\n\n\t\t\tconst distOutOfThreshold = r0.origin.distanceTo( r1.origin ) > DIST_EPSILON;\n\t\t\tconst angleOutOfThreshold = r0.direction.angleTo( r1.direction ) > ANGLE_EPSILON;\n\t\t\treturn angleOutOfThreshold || distOutOfThreshold;\n\n\t\t}\n\n\t\tfunction scoreRays( r0, r1 ) {\n\n\t\t\tconst originDistance = r0.origin.distanceTo( r1.origin );\n\t\t\tconst angleDistance = r0.direction.angleTo( r1.direction );\n\t\t\treturn originDistance / DIST_EPSILON + angleDistance / ANGLE_EPSILON;\n\n\t\t}\n\n\t}\n\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAAI;AACzB,MAAMC,aAAa,GAAG,IAAI;AAE1B,OAAO,MAAMC,MAAM,CAAC;EAEnBC,WAAWA,CAAA,EAAG;IAEb,IAAI,CAACC,KAAK,GAAG,EAAE;EAEhB;EAEAC,MAAMA,CAAEC,GAAG,EAAG;IAEb,IAAI,CAACF,KAAK,CAACG,IAAI,CAAED,GAAI,CAAC;EAEvB;EAEAE,cAAcA,CAAEF,GAAG,EAAG;IAErB,MAAMG,IAAI,GAAG,IAAI,CAACL,KAAK;IACvB,MAAMM,GAAG,GAAGJ,GAAG,CAACK,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,SAAS,CAACC,cAAc,CAAE,CAAE,CAAE,CAAC;IAEnC,IAAIC,SAAS,GAAGC,QAAQ;IACxB,IAAIC,OAAO,GAAG,IAAI;IAClB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGT,IAAI,CAACU,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAG,EAAG;MAE/C,MAAMG,CAAC,GAAGX,IAAI,CAAEQ,CAAC,CAAE;MACnB,IAAKI,OAAO,CAAED,CAAC,EAAEd,GAAI,CAAC,IAAIe,OAAO,CAAED,CAAC,EAAEV,GAAI,CAAC,EAAG;QAE7C;MAED;MAEA,MAAMY,QAAQ,GAAGC,SAAS,CAAEH,CAAC,EAAEd,GAAI,CAAC;MACpC,MAAMkB,QAAQ,GAAGD,SAAS,CAAEH,CAAC,EAAEV,GAAI,CAAC;MACpC,MAAMe,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAEL,QAAQ,EAAEE,QAAS,CAAC;MAC5C,IAAKC,KAAK,GAAGX,SAAS,EAAG;QAExBA,SAAS,GAAGW,KAAK;QACjBT,OAAO,GAAGI,CAAC;MAEZ;IAED;IAEA,OAAOJ,OAAO;IAEd,SAASK,OAAOA,CAAEO,EAAE,EAAEC,EAAE,EAAG;MAE1B,MAAMC,kBAAkB,GAAGF,EAAE,CAACG,MAAM,CAACC,UAAU,CAAEH,EAAE,CAACE,MAAO,CAAC,GAAG/B,YAAY;MAC3E,MAAMiC,mBAAmB,GAAGL,EAAE,CAAChB,SAAS,CAACsB,OAAO,CAAEL,EAAE,CAACjB,SAAU,CAAC,GAAGX,aAAa;MAChF,OAAOgC,mBAAmB,IAAIH,kBAAkB;IAEjD;IAEA,SAASP,SAASA,CAAEK,EAAE,EAAEC,EAAE,EAAG;MAE5B,MAAMM,cAAc,GAAGP,EAAE,CAACG,MAAM,CAACC,UAAU,CAAEH,EAAE,CAACE,MAAO,CAAC;MACxD,MAAMK,aAAa,GAAGR,EAAE,CAAChB,SAAS,CAACsB,OAAO,CAAEL,EAAE,CAACjB,SAAU,CAAC;MAC1D,OAAOuB,cAAc,GAAGnC,YAAY,GAAGoC,aAAa,GAAGnC,aAAa;IAErE;EAED;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}