{"ast":null,"code":"const HASH_WIDTH = 1e-6;\nconst HASH_HALF_WIDTH = HASH_WIDTH * 0.5;\nconst HASH_MULTIPLIER = Math.pow(10, -Math.log10(HASH_WIDTH));\nconst HASH_ADDITION = HASH_HALF_WIDTH * HASH_MULTIPLIER;\nexport function hashNumber(v) {\n  return ~~(v * HASH_MULTIPLIER + HASH_ADDITION);\n}\nexport function hashVertex2(v) {\n  return \"\".concat(hashNumber(v.x), \",\").concat(hashNumber(v.y));\n}\nexport function hashVertex3(v) {\n  return \"\".concat(hashNumber(v.x), \",\").concat(hashNumber(v.y), \",\").concat(hashNumber(v.z));\n}\nexport function hashVertex4(v) {\n  return \"\".concat(hashNumber(v.x), \",\").concat(hashNumber(v.y), \",\").concat(hashNumber(v.z), \",\").concat(hashNumber(v.w));\n}\nexport function hashRay(r) {\n  return \"\".concat(hashVertex3(r.origin), \"-\").concat(hashVertex3(r.direction));\n}\nexport function toNormalizedRay(v0, v1, target) {\n  // get a normalized direction\n  target.direction.subVectors(v1, v0).normalize();\n\n  // project the origin onto the perpendicular plane that\n  // passes through 0, 0, 0\n  const scalar = v0.dot(target.direction);\n  target.origin.copy(v0).addScaledVector(target.direction, -scalar);\n  return target;\n}","map":{"version":3,"names":["HASH_WIDTH","HASH_HALF_WIDTH","HASH_MULTIPLIER","Math","pow","log10","HASH_ADDITION","hashNumber","v","hashVertex2","concat","x","y","hashVertex3","z","hashVertex4","w","hashRay","r","origin","direction","toNormalizedRay","v0","v1","target","subVectors","normalize","scalar","dot","copy","addScaledVector"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/node_modules/three-bvh-csg/src/core/utils/hashUtils.js"],"sourcesContent":["const HASH_WIDTH = 1e-6;\nconst HASH_HALF_WIDTH = HASH_WIDTH * 0.5;\nconst HASH_MULTIPLIER = Math.pow( 10, - Math.log10( HASH_WIDTH ) );\nconst HASH_ADDITION = HASH_HALF_WIDTH * HASH_MULTIPLIER;\nexport function hashNumber( v ) {\n\n\treturn ~ ~ ( v * HASH_MULTIPLIER + HASH_ADDITION );\n\n}\n\nexport function hashVertex2( v ) {\n\n\treturn `${ hashNumber( v.x ) },${ hashNumber( v.y ) }`;\n\n}\n\nexport function hashVertex3( v ) {\n\n\treturn `${ hashNumber( v.x ) },${ hashNumber( v.y ) },${ hashNumber( v.z ) }`;\n\n}\n\nexport function hashVertex4( v ) {\n\n\treturn `${ hashNumber( v.x ) },${ hashNumber( v.y ) },${ hashNumber( v.z ) },${ hashNumber( v.w ) }`;\n\n}\n\nexport function hashRay( r ) {\n\n\treturn `${ hashVertex3( r.origin ) }-${ hashVertex3( r.direction ) }`;\n\n}\n\nexport function toNormalizedRay( v0, v1, target ) {\n\n\t// get a normalized direction\n\ttarget\n\t\t.direction\n\t\t.subVectors( v1, v0 )\n\t\t.normalize();\n\n\t// project the origin onto the perpendicular plane that\n\t// passes through 0, 0, 0\n\tconst scalar = v0.dot( target.direction );\n\ttarget.\n\t\torigin\n\t\t.copy( v0 )\n\t\t.addScaledVector( target.direction, - scalar );\n\n\treturn target;\n\n}\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,IAAI;AACvB,MAAMC,eAAe,GAAGD,UAAU,GAAG,GAAG;AACxC,MAAME,eAAe,GAAGC,IAAI,CAACC,GAAG,CAAE,EAAE,EAAE,CAAED,IAAI,CAACE,KAAK,CAAEL,UAAW,CAAE,CAAC;AAClE,MAAMM,aAAa,GAAGL,eAAe,GAAGC,eAAe;AACvD,OAAO,SAASK,UAAUA,CAAEC,CAAC,EAAG;EAE/B,OAAO,CAAE,EAAIA,CAAC,GAAGN,eAAe,GAAGI,aAAa,CAAE;AAEnD;AAEA,OAAO,SAASG,WAAWA,CAAED,CAAC,EAAG;EAEhC,UAAAE,MAAA,CAAWH,UAAU,CAAEC,CAAC,CAACG,CAAE,CAAC,OAAAD,MAAA,CAAMH,UAAU,CAAEC,CAAC,CAACI,CAAE,CAAC;AAEpD;AAEA,OAAO,SAASC,WAAWA,CAAEL,CAAC,EAAG;EAEhC,UAAAE,MAAA,CAAWH,UAAU,CAAEC,CAAC,CAACG,CAAE,CAAC,OAAAD,MAAA,CAAMH,UAAU,CAAEC,CAAC,CAACI,CAAE,CAAC,OAAAF,MAAA,CAAMH,UAAU,CAAEC,CAAC,CAACM,CAAE,CAAC;AAE3E;AAEA,OAAO,SAASC,WAAWA,CAAEP,CAAC,EAAG;EAEhC,UAAAE,MAAA,CAAWH,UAAU,CAAEC,CAAC,CAACG,CAAE,CAAC,OAAAD,MAAA,CAAMH,UAAU,CAAEC,CAAC,CAACI,CAAE,CAAC,OAAAF,MAAA,CAAMH,UAAU,CAAEC,CAAC,CAACM,CAAE,CAAC,OAAAJ,MAAA,CAAMH,UAAU,CAAEC,CAAC,CAACQ,CAAE,CAAC;AAElG;AAEA,OAAO,SAASC,OAAOA,CAAEC,CAAC,EAAG;EAE5B,UAAAR,MAAA,CAAWG,WAAW,CAAEK,CAAC,CAACC,MAAO,CAAC,OAAAT,MAAA,CAAMG,WAAW,CAAEK,CAAC,CAACE,SAAU,CAAC;AAEnE;AAEA,OAAO,SAASC,eAAeA,CAAEC,EAAE,EAAEC,EAAE,EAAEC,MAAM,EAAG;EAEjD;EACAA,MAAM,CACJJ,SAAS,CACTK,UAAU,CAAEF,EAAE,EAAED,EAAG,CAAC,CACpBI,SAAS,CAAC,CAAC;;EAEb;EACA;EACA,MAAMC,MAAM,GAAGL,EAAE,CAACM,GAAG,CAAEJ,MAAM,CAACJ,SAAU,CAAC;EACzCI,MAAM,CACLL,MAAM,CACLU,IAAI,CAAEP,EAAG,CAAC,CACVQ,eAAe,CAAEN,MAAM,CAACJ,SAAS,EAAE,CAAEO,MAAO,CAAC;EAE/C,OAAOH,MAAM;AAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}