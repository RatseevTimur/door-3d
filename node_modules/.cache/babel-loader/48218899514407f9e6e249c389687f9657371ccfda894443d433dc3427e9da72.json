{"ast":null,"code":"var _jsxFileName = \"/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/components/3D/EditSinkLayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditSinkLayer = props => {\n  _s();\n  let scale = 100;\n  let boxSize = props.boxSize;\n  const [hovered, setHover] = useState(false);\n  function removeCut(cut) {\n    props.setBoxSize({\n      ...boxSize,\n      cuts: boxSize.cuts.filter((item, i) => i !== cut)\n    });\n  }\n  function editCut(cut) {\n    // тут будет фнукция изменения положения и размера отверстия\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.boxSize.cuts.map((cut, i) => {\n      return /*#__PURE__*/_jsxDEV(\"mesh\", {\n        rotation: cut.forma === \"square\" ? [0, 0, cut.rotation[2]] : [Math.PI / 2, 0, 0],\n        position: [cut.position[0], cut.position[1], 0]\n        // onPointerDown={()=> props.removeCut(i)}\n        // onDoubleClick={()=> props.removeCut(i)}\n        ,\n        onContextMenu: () => removeCut(i),\n        onPointerOver: event => setHover(i),\n        onPointerOut: event => setHover(false),\n        children: [cut.forma === \"square\" ? /*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          args: [cut.width / scale, cut.height / scale, boxSize.thickness / scale]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n          args: [cut.width / 2 / scale, cut.width / 2 / scale, boxSize.thickness / scale]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n          color: hovered === i ? 'red' : '#fff',\n          transparent: true,\n          opacity: hovered !== i ? 0 : .6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(EditSinkLayer, \"fcjVe6z7UHFm2EoR145fPhFqP60=\");\n_c = EditSinkLayer;\nexport default EditSinkLayer;\nvar _c;\n$RefreshReg$(_c, \"EditSinkLayer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EditSinkLayer","props","_s","scale","boxSize","hovered","setHover","removeCut","cut","setBoxSize","cuts","filter","item","i","editCut","children","map","rotation","forma","Math","PI","position","onContextMenu","onPointerOver","event","onPointerOut","args","width","height","thickness","fileName","_jsxFileName","lineNumber","columnNumber","color","transparent","opacity","_c","$RefreshReg$"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/components/3D/EditSinkLayer.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst EditSinkLayer = (props) => {\n    let scale = 100\n    let boxSize = props.boxSize\n    const [hovered, setHover] = useState(false)\n\n    function removeCut(cut) {\n        props.setBoxSize({\n            ...boxSize, cuts: boxSize.cuts.filter((item, i) => i !== cut)\n        })\n    }\n\n    function editCut(cut) {\n        // тут будет фнукция изменения положения и размера отверстия\n    }\n\n    return (\n        <>\n            {props.boxSize.cuts.map((cut, i) => {\n\n                return (\n                    <mesh key={i}\n                        rotation={\n                            cut.forma === \"square\" ? [0, 0, cut.rotation[2]] : [Math.PI / 2, 0, 0]\n                        }\n                        position={[cut.position[0], cut.position[1], 0]}\n                        // onPointerDown={()=> props.removeCut(i)}\n                        // onDoubleClick={()=> props.removeCut(i)}\n                        onContextMenu={() => removeCut(i)}\n                        onPointerOver={(event) => setHover(i)}\n                        onPointerOut={(event) => setHover(false)}\n                    >\n                        {cut.forma === \"square\" ?\n                            <boxGeometry args={[cut.width / scale, cut.height / scale, boxSize.thickness / scale]} />\n                            :\n                            <cylinderGeometry args={[cut.width / 2 / scale, cut.width / 2 / scale, boxSize.thickness / scale]} />\n                        }\n                        \n                        <meshPhongMaterial color={hovered === i ? 'red' : '#fff'} transparent={true} opacity={hovered !== i ? 0 : .6} />\n                    </mesh>\n                )\n\n            })\n            }\n        </>\n    )\n\n}\n\nexport default EditSinkLayer\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,IAAIC,KAAK,GAAG,GAAG;EACf,IAAIC,OAAO,GAAGH,KAAK,CAACG,OAAO;EAC3B,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,SAASY,SAASA,CAACC,GAAG,EAAE;IACpBP,KAAK,CAACQ,UAAU,CAAC;MACb,GAAGL,OAAO;MAAEM,IAAI,EAAEN,OAAO,CAACM,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAKA,CAAC,KAAKL,GAAG;IAChE,CAAC,CAAC;EACN;EAEA,SAASM,OAAOA,CAACN,GAAG,EAAE;IAClB;EAAA;EAGJ,oBACIX,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACKd,KAAK,CAACG,OAAO,CAACM,IAAI,CAACM,GAAG,CAAC,CAACR,GAAG,EAAEK,CAAC,KAAK;MAEhC,oBACIhB,OAAA;QACIoB,QAAQ,EACJT,GAAG,CAACU,KAAK,KAAK,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEV,GAAG,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAACE,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CACxE;QACDC,QAAQ,EAAE,CAACb,GAAG,CAACa,QAAQ,CAAC,CAAC,CAAC,EAAEb,GAAG,CAACa,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC9C;QACA;QAAA;QACAC,aAAa,EAAEA,CAAA,KAAMf,SAAS,CAACM,CAAC,CAAE;QAClCU,aAAa,EAAGC,KAAK,IAAKlB,QAAQ,CAACO,CAAC,CAAE;QACtCY,YAAY,EAAGD,KAAK,IAAKlB,QAAQ,CAAC,KAAK,CAAE;QAAAS,QAAA,GAExCP,GAAG,CAACU,KAAK,KAAK,QAAQ,gBACnBrB,OAAA;UAAa6B,IAAI,EAAE,CAAClB,GAAG,CAACmB,KAAK,GAAGxB,KAAK,EAAEK,GAAG,CAACoB,MAAM,GAAGzB,KAAK,EAAEC,OAAO,CAACyB,SAAS,GAAG1B,KAAK;QAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEzFpC,OAAA;UAAkB6B,IAAI,EAAE,CAAClB,GAAG,CAACmB,KAAK,GAAG,CAAC,GAAGxB,KAAK,EAAEK,GAAG,CAACmB,KAAK,GAAG,CAAC,GAAGxB,KAAK,EAAEC,OAAO,CAACyB,SAAS,GAAG1B,KAAK;QAAE;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGzGpC,OAAA;UAAmBqC,KAAK,EAAE7B,OAAO,KAAKQ,CAAC,GAAG,KAAK,GAAG,MAAO;UAACsB,WAAW,EAAE,IAAK;UAACC,OAAO,EAAE/B,OAAO,KAAKQ,CAAC,GAAG,CAAC,GAAG;QAAG;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAjBzGpB,CAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBN,CAAC;IAGf,CAAC;EAAC,gBAEJ,CAAC;AAGX,CAAC;AAAA/B,EAAA,CA9CKF,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AAgDnB,eAAeA,aAAa;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}