{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import html2canvas from'html2canvas';import{GLTFLoader}from'three/examples/jsm/loaders/GLTFLoader.js';import{GLTFExporter}from'three/examples/jsm/exporters/GLTFExporter.js';import{Button}from'primereact/button';import{ColorPicker}from'primereact/colorpicker';import{useSelector,useDispatch}from'react-redux';import{setColorBackground,setVisible}from\"../../redux/reducers/scene.js\";import{Dropdown}from'primereact/dropdown';import DialogWindow from'../dialog/DialogWindow.jsx';import\"./Toolbar.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Toolbar(_ref){let{mesh,forma}=_ref;const dispatch=useDispatch();const{colorBackground,visible,visibleSink}=useSelector(state=>state.scene);const textureSelected=useSelector(state=>state.textureSelected);let textureLoadSingle=useSelector(state=>state.textureLoad);const modelProperties=useSelector(state=>state.modelProperties.modelProperties);const chamfer=useSelector(state=>state.modelProperties.chamfer);const cuts=useSelector(state=>state.modelProperties.cuts);let models=JSON.parse(localStorage.getItem('models'))||[];const[visibleDialog,setVisibleDialog]=useState(false);const saveModel=()=>{const modelPreview=document.getElementById(\"model\");let preview;html2canvas(modelPreview).then(function(canvas){// document.body.appendChild(canvas);\npreview=canvas.toDataURL();}).then(()=>{function getRandomInt(max){return Math.floor(Math.random()*max);}const model={id:getRandomInt(1000000000000000000000),material:textureLoadSingle,model:modelProperties,chamfer:chamfer,preview:preview,cuts:cuts};console.log(model);models.push(model);localStorage.setItem('models',JSON.stringify(models));});};//Скачивание 3Д модели\nconst params={trs:false,onlyVisible:true,binary:false,maxTextureSize:4096};const options={trs:params.trs,onlyVisible:params.onlyVisible,binary:params.binary,maxTextureSize:params.maxTextureSize};let exporter=new GLTFExporter();const export3D=mesh=>{//если модель создана\nlet filename=prompt('Введите имя файла','');if(filename!==null&&filename!==''){//создать ссылку на файл\nlet link=document.createElement('a');link.style.display='none';document.body.appendChild(link);function save(blob,filename){link.href=URL.createObjectURL(blob);link.download=filename;link.click();}function saveString(text,filename){//   save(new Blob([text], { type: 'text/plain' }), filename);\nsave(new Blob([text],{type:'application/json'}),filename);}//let sceneToExport = window.AFRAME ? AFRAME.scenes[0].object3D : scene\nexporter.parse(mesh.current,function(gltf){const output=JSON.stringify(gltf,null,2);saveString(output,filename+'.gltf');},options);}};//Скачивание 3Д модели end\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[forma==1&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{className:\"p-button-text\",icon:options=>/*#__PURE__*/_jsx(\"img\",{src:\"/door.svg\"}),placeholder:\"Bottom\",tooltip:\"\\u0432\\u044B\\u0440\\u0435\\u0437 \\u0434\\u043B\\u044F \\u043A\\u043E\\u0442\\u0438\\u043A\\u0430\",tooltipOptions:{position:'bottom'},onClick:()=>setVisibleDialog(true)}),/*#__PURE__*/_jsx(Button,{icon:\"pi \".concat(visible?'pi-eye-slash':'pi-eye'),className:\"p-button-danger p-button-text p-button-lg\",placeholder:\"Bottom\",tooltip:\"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C \\u0438\\u043D\\u0441\\u0442\\u0440\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\",tooltipOptions:{position:'bottom'},onClick:()=>dispatch(setVisible())}),/*#__PURE__*/_jsx(Button,{icon:\"pi pi-download\",className:\"p-button-info p-button-text p-button-lg\",onClick:()=>export3D(mesh),placeholder:\"Bottom\",tooltip:\"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C gltf\",tooltipOptions:{position:'bottom'}})]}),/*#__PURE__*/_jsx(ColorPicker,{value:colorBackground,onChange:e=>dispatch(setColorBackground(e.value)),tooltip:\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0446\\u0432\\u0435\\u0442 \\u0444\\u043E\\u043D\\u0430\",tooltipOptions:{position:'bottom'}}),/*#__PURE__*/_jsx(Button,{icon:\"pi pi-save\",className:\"p-button-danger p-button-text p-button-lg\",onClick:()=>saveModel(),placeholder:\"Bottom\",tooltip:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043C\\u043E\\u0434\\u0435\\u043B\\u044C\",tooltipOptions:{position:'bottom'}}),/*#__PURE__*/_jsx(DialogWindow,{visible:visibleDialog,setVisible:setVisibleDialog})]});}export default Toolbar;","map":{"version":3,"names":["React","useEffect","useState","html2canvas","GLTFLoader","GLTFExporter","Button","ColorPicker","useSelector","useDispatch","setColorBackground","setVisible","Dropdown","DialogWindow","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Toolbar","_ref","mesh","forma","dispatch","colorBackground","visible","visibleSink","state","scene","textureSelected","textureLoadSingle","textureLoad","modelProperties","chamfer","cuts","models","JSON","parse","localStorage","getItem","visibleDialog","setVisibleDialog","saveModel","modelPreview","document","getElementById","preview","then","canvas","toDataURL","getRandomInt","max","Math","floor","random","model","id","material","console","log","push","setItem","stringify","params","trs","onlyVisible","binary","maxTextureSize","options","exporter","export3D","filename","prompt","link","createElement","style","display","body","appendChild","save","blob","href","URL","createObjectURL","download","click","saveString","text","Blob","type","current","gltf","output","children","className","icon","src","placeholder","tooltip","tooltipOptions","position","onClick","concat","value","onChange","e"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/components/toolbar/Toolbar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport html2canvas from 'html2canvas';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter.js';\n\nimport { Button } from 'primereact/button';\nimport { ColorPicker } from 'primereact/colorpicker';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setColorBackground, setVisible } from \"../../redux/reducers/scene.js\";\nimport { Dropdown } from 'primereact/dropdown';\nimport DialogWindow from '../dialog/DialogWindow.jsx'\nimport \"./Toolbar.scss\"\n\nfunction Toolbar({ mesh, forma }) {\n    const dispatch = useDispatch()\n    const { colorBackground, visible, visibleSink } = useSelector((state) => state.scene)\n\n    const textureSelected = useSelector((state) => state.textureSelected)\n    let textureLoadSingle = useSelector((state) => state.textureLoad)\n    const modelProperties = useSelector((state) => state.modelProperties.modelProperties)\n    const chamfer = useSelector((state) => state.modelProperties.chamfer)\n    const cuts = useSelector((state) => state.modelProperties.cuts)\n\n    let models = JSON.parse(localStorage.getItem('models')) || []\n\n    const [visibleDialog, setVisibleDialog] = useState(false);\n\n    const saveModel = () => {\n        const modelPreview = document.getElementById(\"model\")\n        let preview\n        html2canvas(modelPreview).then(function (canvas) {\n            // document.body.appendChild(canvas);\n            preview = canvas.toDataURL()\n        })\n            .then(() => {\n                function getRandomInt(max) {\n                    return Math.floor(Math.random() * max);\n                }\n\n                const model = {\n                    id: getRandomInt(1000000000000000000000),\n                    material: textureLoadSingle,\n                    model: modelProperties,\n                    chamfer: chamfer,\n                    preview: preview,\n                    cuts: cuts\n                }\n                console.log(model)\n\n                models.push(model)\n\n                localStorage.setItem('models', JSON.stringify(models))\n            })\n    }\n\n    //Скачивание 3Д модели\n    const params = {\n        trs: false,\n        onlyVisible: true,\n        binary: false,\n        maxTextureSize: 4096,\n    };\n    const options = {\n        trs: params.trs,\n        onlyVisible: params.onlyVisible,\n        binary: params.binary,\n        maxTextureSize: params.maxTextureSize\n    };\n    let exporter = new GLTFExporter()\n    const export3D = (mesh) => {\n        //если модель создана\n        let filename = prompt('Введите имя файла', '')\n        if (filename !== null && filename !== '') {\n            //создать ссылку на файл\n            let link = document.createElement('a')\n            link.style.display = 'none'\n            document.body.appendChild(link)\n            function save(blob, filename) {\n                link.href = URL.createObjectURL(blob)\n                link.download = filename\n                link.click()\n            }\n\n            function saveString(text, filename) {\n                //   save(new Blob([text], { type: 'text/plain' }), filename);\n                save(new Blob([text], { type: 'application/json' }), filename)\n            }\n            //let sceneToExport = window.AFRAME ? AFRAME.scenes[0].object3D : scene\n            exporter.parse(mesh.current, function (gltf) {\n                const output = JSON.stringify(gltf, null, 2);\n                saveString(output, filename + '.gltf')\n            }, options);\n        }\n    }\n    //Скачивание 3Д модели end\n\n    return (\n        <>\n            {forma == 1 &&\n                <>\n                    <Button className=\"p-button-text\" icon={(options) => <img src='/door.svg'></img>}\n                        placeholder=\"Bottom\" tooltip=\"вырез для котика\" tooltipOptions={{ position: 'bottom' }}\n                        onClick={() => setVisibleDialog(true)}\n                    />\n\n                    <Button icon={`pi ${visible ? 'pi-eye-slash' : 'pi-eye'}`}\n                        className=\"p-button-danger p-button-text p-button-lg\"\n                        placeholder=\"Bottom\" tooltip=\"Скрыть инструменты\" tooltipOptions={{ position: 'bottom' }}\n                        onClick={() => dispatch(setVisible())}\n                    />\n\n                    <Button icon=\"pi pi-download\" className=\"p-button-info p-button-text p-button-lg\" onClick={() => export3D(mesh)}\n                        placeholder=\"Bottom\" tooltip=\"Скачать gltf\" tooltipOptions={{ position: 'bottom' }}\n                    />\n                </>\n            }\n\n            <ColorPicker value={colorBackground} onChange={(e) => dispatch(setColorBackground(e.value))}\n                tooltip=\"Изменить цвет фона\" tooltipOptions={{ position: 'bottom' }}\n            />\n\n            <Button icon=\"pi pi-save\" className=\"p-button-danger p-button-text p-button-lg\" onClick={() => saveModel()}\n                placeholder=\"Bottom\" tooltip=\"Сохранить модель\" tooltipOptions={{ position: 'bottom' }}\n            />\n\n\n\n            <DialogWindow visible={visibleDialog} setVisible={setVisibleDialog} />\n        </>\n    );\n}\n\nexport default Toolbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}