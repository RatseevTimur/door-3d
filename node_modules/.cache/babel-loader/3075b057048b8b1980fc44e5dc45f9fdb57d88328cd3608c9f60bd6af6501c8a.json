{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const EditSinkLayer=props=>{let scale=100;let boxSize=props.boxSize;const[hovered,setHover]=useState(false);function removeCut(cut){props.setBoxSize({...boxSize,cuts:boxSize.cuts.filter((item,i)=>i!==cut)});}function editCut(cut){// тут будет фнукция изменения положения и размера отверстия\n}return/*#__PURE__*/_jsx(_Fragment,{children:props.boxSize.cuts.map((cut,i)=>{return/*#__PURE__*/_jsxs(\"mesh\",{rotation:cut.forma===\"square\"?[0,0,cut.rotation[2]]:[Math.PI/2,0,0],position:[cut.position[0],cut.position[1],0]// onPointerDown={()=> props.removeCut(i)}\n// onDoubleClick={()=> props.removeCut(i)}\n,onContextMenu:()=>removeCut(i),onPointerOver:event=>setHover(i),onPointerOut:event=>setHover(false),children:[cut.forma===\"square\"?/*#__PURE__*/_jsx(\"boxGeometry\",{args:[cut.width/scale,cut.height/scale,boxSize.thickness/scale]}):/*#__PURE__*/_jsx(\"cylinderGeometry\",{args:[cut.width/2/scale,cut.width/2/scale,boxSize.thickness/scale]}),/*#__PURE__*/_jsx(\"meshPhongMaterial\",{color:hovered===i?'red':'#fff',transparent:true,opacity:hovered!==i?0:.6})]},i);})});};export default EditSinkLayer;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EditSinkLayer","props","scale","boxSize","hovered","setHover","removeCut","cut","setBoxSize","cuts","filter","item","i","editCut","children","map","rotation","forma","Math","PI","position","onContextMenu","onPointerOver","event","onPointerOut","args","width","height","thickness","color","transparent","opacity"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/components/3D/EditSinkLayer.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst EditSinkLayer = (props) => {\n    let scale = 100\n    let boxSize = props.boxSize\n    const [hovered, setHover] = useState(false)\n\n    function removeCut(cut) {\n        props.setBoxSize({\n            ...boxSize, cuts: boxSize.cuts.filter((item, i) => i !== cut)\n        })\n    }\n\n    function editCut(cut) {\n        // тут будет фнукция изменения положения и размера отверстия\n    }\n\n    return (\n        <>\n            {props.boxSize.cuts.map((cut, i) => {\n\n                return (\n                    <mesh key={i}\n                        rotation={\n                            cut.forma === \"square\" ? [0, 0, cut.rotation[2]] : [Math.PI / 2, 0, 0]\n                        }\n                        position={[cut.position[0], cut.position[1], 0]}\n                        // onPointerDown={()=> props.removeCut(i)}\n                        // onDoubleClick={()=> props.removeCut(i)}\n                        onContextMenu={() => removeCut(i)}\n                        onPointerOver={(event) => setHover(i)}\n                        onPointerOut={(event) => setHover(false)}\n                    >\n                        {cut.forma === \"square\" ?\n                            <boxGeometry args={[cut.width / scale, cut.height / scale, boxSize.thickness / scale]} />\n                            :\n                            <cylinderGeometry args={[cut.width / 2 / scale, cut.width / 2 / scale, boxSize.thickness / scale]} />\n                        }\n                        \n                        <meshPhongMaterial color={hovered === i ? 'red' : '#fff'} transparent={true} opacity={hovered !== i ? 0 : .6} />\n                    </mesh>\n                )\n\n            })\n            }\n        </>\n    )\n\n}\n\nexport default EditSinkLayer\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEvC,KAAM,CAAAC,aAAa,CAAIC,KAAK,EAAK,CAC7B,GAAI,CAAAC,KAAK,CAAG,GAAG,CACf,GAAI,CAAAC,OAAO,CAAGF,KAAK,CAACE,OAAO,CAC3B,KAAM,CAACC,OAAO,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAE3C,QAAS,CAAAa,SAASA,CAACC,GAAG,CAAE,CACpBN,KAAK,CAACO,UAAU,CAAC,CACb,GAAGL,OAAO,CAAEM,IAAI,CAAEN,OAAO,CAACM,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,CAAEC,CAAC,GAAKA,CAAC,GAAKL,GAAG,CAChE,CAAC,CAAC,CACN,CAEA,QAAS,CAAAM,OAAOA,CAACN,GAAG,CAAE,CAClB;AAAA,CAGJ,mBACIZ,IAAA,CAAAI,SAAA,EAAAe,QAAA,CACKb,KAAK,CAACE,OAAO,CAACM,IAAI,CAACM,GAAG,CAAC,CAACR,GAAG,CAAEK,CAAC,GAAK,CAEhC,mBACIf,KAAA,SACImB,QAAQ,CACJT,GAAG,CAACU,KAAK,GAAK,QAAQ,CAAG,CAAC,CAAC,CAAE,CAAC,CAAEV,GAAG,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAG,CAACE,IAAI,CAACC,EAAE,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CACxE,CACDC,QAAQ,CAAE,CAACb,GAAG,CAACa,QAAQ,CAAC,CAAC,CAAC,CAAEb,GAAG,CAACa,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAC,CAC9C;AACA;AAAA,CACAC,aAAa,CAAEA,CAAA,GAAMf,SAAS,CAACM,CAAC,CAAE,CAClCU,aAAa,CAAGC,KAAK,EAAKlB,QAAQ,CAACO,CAAC,CAAE,CACtCY,YAAY,CAAGD,KAAK,EAAKlB,QAAQ,CAAC,KAAK,CAAE,CAAAS,QAAA,EAExCP,GAAG,CAACU,KAAK,GAAK,QAAQ,cACnBtB,IAAA,gBAAa8B,IAAI,CAAE,CAAClB,GAAG,CAACmB,KAAK,CAAGxB,KAAK,CAAEK,GAAG,CAACoB,MAAM,CAAGzB,KAAK,CAAEC,OAAO,CAACyB,SAAS,CAAG1B,KAAK,CAAE,CAAE,CAAC,cAEzFP,IAAA,qBAAkB8B,IAAI,CAAE,CAAClB,GAAG,CAACmB,KAAK,CAAG,CAAC,CAAGxB,KAAK,CAAEK,GAAG,CAACmB,KAAK,CAAG,CAAC,CAAGxB,KAAK,CAAEC,OAAO,CAACyB,SAAS,CAAG1B,KAAK,CAAE,CAAE,CAAC,cAGzGP,IAAA,sBAAmBkC,KAAK,CAAEzB,OAAO,GAAKQ,CAAC,CAAG,KAAK,CAAG,MAAO,CAACkB,WAAW,CAAE,IAAK,CAACC,OAAO,CAAE3B,OAAO,GAAKQ,CAAC,CAAG,CAAC,CAAG,EAAG,CAAE,CAAC,GAjBzGA,CAkBL,CAAC,CAGf,CAAC,CAAC,CAEJ,CAAC,CAGX,CAAC,CAED,cAAe,CAAAZ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}