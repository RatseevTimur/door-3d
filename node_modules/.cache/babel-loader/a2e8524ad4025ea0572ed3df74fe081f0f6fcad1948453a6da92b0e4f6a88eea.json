{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const sceneState = createSlice({\n  name: \"scene\",\n  initialState: {\n    colorBackground: \"414142\",\n    visible: true,\n    visibleLeftPanel: false,\n    visibleSink: false,\n    sinkState: {\n      forma: \"\",\n      width: null,\n      height: null\n    }\n  },\n  reducers: {\n    setColorBackground: (state, action) => {\n      state.colorBackground = action.payload;\n    },\n    setVisible: state => {\n      state.visible = !state.visible;\n    },\n    setVisibleLeftPanel: (state, action) => {\n      state.visibleLeftPanel = action.payload;\n    },\n    setVisibleSink: state => {\n      state.visibleSink = !state.visibleSink;\n    },\n    setSinkState: (state, action) => {\n      state.sinkState.forma = action.payload.forma;\n      state.sinkState.width = action.payload.width;\n      state.sinkState.height = action.payload.height;\n    }\n  }\n});\nexport const {\n  setColorBackground,\n  setVisible,\n  setVisibleLeftPanel,\n  setVisibleSink,\n  setSinkState\n} = sceneState.actions;\nexport default sceneState.reducer;","map":{"version":3,"names":["createSlice","sceneState","name","initialState","colorBackground","visible","visibleLeftPanel","visibleSink","sinkState","forma","width","height","reducers","setColorBackground","state","action","payload","setVisible","setVisibleLeftPanel","setVisibleSink","setSinkState","actions","reducer"],"sources":["/Users/ratseevtimur/Documents/Test-Projects/door-3d/src/redux/reducers/scene.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const sceneState = createSlice({\n  name: \"scene\",\n  initialState: {\n    colorBackground: \"414142\",\n    visible: true,\n    visibleLeftPanel: false,\n    visibleSink: false,\n    sinkState: {\n      forma: \"\",\n      width: null,\n      height: null\n    }\n  },\n  reducers: {\n    setColorBackground: (state, action) => {\n      state.colorBackground = action.payload\n    },\n    setVisible: (state) => {\n      state.visible = !state.visible\n    },\n    setVisibleLeftPanel: (state, action) => {\n      state.visibleLeftPanel = action.payload\n    },\n    setVisibleSink: (state) => {\n      state.visibleSink = !state.visibleSink\n    },\n    setSinkState: (state, action) => {\n      state.sinkState.forma = action.payload.forma\n      state.sinkState.width = action.payload.width\n      state.sinkState.height = action.payload.height\n    }\n  }\n});\n\nexport const { setColorBackground, setVisible, setVisibleLeftPanel, setVisibleSink, setSinkState } = sceneState.actions;\n\nexport default sceneState.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,eAAe,EAAE,QAAQ;IACzBC,OAAO,EAAE,IAAI;IACbC,gBAAgB,EAAE,KAAK;IACvBC,WAAW,EAAE,KAAK;IAClBC,SAAS,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACV,eAAe,GAAGW,MAAM,CAACC,OAAO;IACxC,CAAC;IACDC,UAAU,EAAGH,KAAK,IAAK;MACrBA,KAAK,CAACT,OAAO,GAAG,CAACS,KAAK,CAACT,OAAO;IAChC,CAAC;IACDa,mBAAmB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACR,gBAAgB,GAAGS,MAAM,CAACC,OAAO;IACzC,CAAC;IACDG,cAAc,EAAGL,KAAK,IAAK;MACzBA,KAAK,CAACP,WAAW,GAAG,CAACO,KAAK,CAACP,WAAW;IACxC,CAAC;IACDa,YAAY,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACN,SAAS,CAACC,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;MAC5CK,KAAK,CAACN,SAAS,CAACE,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;MAC5CI,KAAK,CAACN,SAAS,CAACG,MAAM,GAAGI,MAAM,CAACC,OAAO,CAACL,MAAM;IAChD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,kBAAkB;EAAEI,UAAU;EAAEC,mBAAmB;EAAEC,cAAc;EAAEC;AAAa,CAAC,GAAGnB,UAAU,CAACoB,OAAO;AAEvH,eAAepB,UAAU,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}